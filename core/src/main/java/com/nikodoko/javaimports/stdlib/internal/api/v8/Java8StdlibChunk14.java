// Code generated by GenerateStdlib.java. DO NOT EDIT.
package com.nikodoko.javaimports.stdlib.internal.api.v8;

import static com.nikodoko.javaimports.stdlib.internal.Stdlib.newImport;

import com.google.common.collect.ImmutableMap;
import com.nikodoko.javaimports.common.Identifier;
import com.nikodoko.javaimports.common.Import;
import java.util.Map;

public class Java8StdlibChunk14 {
  static final Map<Identifier, Import[]> CLASSES =
      new ImmutableMap.Builder<Identifier, Import[]>()
          .put(
              new Identifier("SimpleFileVisitor"),
              new Import[] {
                newImport("java.nio.file.SimpleFileVisitor", false),
              })
          .put(
              new Identifier("AccessibleEditableText"),
              new Import[] {
                newImport("javax.accessibility.AccessibleEditableText", false),
              })
          .put(
              new Identifier("NameComponent"),
              new Import[] {
                newImport("org.omg.CosNaming.NameComponent", false),
              })
          .put(
              new Identifier("MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A"),
              new Import[] {
                newImport(
                    "java.lang.Character.UnicodeBlock.MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A", true),
              })
          .put(
              new Identifier("AttributeChangeNotificationFilter"),
              new Import[] {
                newImport("javax.management.AttributeChangeNotificationFilter", false),
              })
          .put(
              new Identifier("X500PrivateCredential"),
              new Import[] {
                newImport("javax.security.auth.x500.X500PrivateCredential", false),
              })
          .put(
              new Identifier("MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B"),
              new Import[] {
                newImport(
                    "java.lang.Character.UnicodeBlock.MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B", true),
              })
          .put(
              new Identifier("ForwardingJavaFileObject"),
              new Import[] {
                newImport("javax.tools.ForwardingJavaFileObject", false),
              })
          .put(
              new Identifier("SecureClassLoader"),
              new Import[] {
                newImport("java.security.SecureClassLoader", false),
              })
          .put(
              new Identifier("TONER_LOW"),
              new Import[] {
                newImport("javax.print.attribute.standard.PrinterStateReason.TONER_LOW", true),
              })
          .put(
              new Identifier("WEDNESDAY"),
              new Import[] {
                newImport("java.util.Calendar.WEDNESDAY", true),
              })
          .put(
              new Identifier("ObjectFactory"),
              new Import[] {
                newImport("javax.naming.spi.ObjectFactory", false),
              })
          .put(
              new Identifier("NormalizedStringAdapter"),
              new Import[] {
                newImport("javax.xml.bind.annotation.adapters.NormalizedStringAdapter", false),
              })
          .put(
              new Identifier("X509KeyManager"),
              new Import[] {
                newImport("javax.net.ssl.X509KeyManager", false),
              })
          .put(
              new Identifier("BALINESE"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.BALINESE", true),
              })
          .put(
              new Identifier("TimeUnit"),
              new Import[] {
                newImport("java.util.concurrent.TimeUnit", false),
              })
          .put(
              new Identifier("RUNTIME_MXBEAN_NAME"),
              new Import[] {
                newImport("java.lang.management.ManagementFactory.RUNTIME_MXBEAN_NAME", true),
              })
          .put(
              new Identifier("VK_LEFT_PARENTHESIS"),
              new Import[] {
                newImport("java.awt.event.KeyEvent.VK_LEFT_PARENTHESIS", true),
              })
          .put(
              new Identifier("LayoutStyle"),
              new Import[] {
                newImport("javax.swing.LayoutStyle", false),
              })
          .put(
              new Identifier("Wrapper"),
              new Import[] {
                newImport("java.sql.Wrapper", false),
              })
          .put(
              new Identifier("FieldBorder"),
              new Import[] {
                newImport("javax.swing.plaf.basic.BasicBorders.FieldBorder", false),
              })
          .put(
              new Identifier("PSpecified"),
              new Import[] {
                newImport("javax.crypto.spec.PSource.PSpecified", false),
              })
          .put(
              new Identifier("ARROW_BUTTON"),
              new Import[] {
                newImport("javax.swing.plaf.synth.Region.ARROW_BUTTON", true),
              })
          .put(
              new Identifier("not_context"),
              new Import[] {
                newImport(
                    "org.omg.CosNaming.NamingContextPackage.NotFoundReason.not_context", true),
              })
          .put(
              new Identifier("StartTagType"),
              new Import[] {
                newImport("javax.swing.text.DefaultStyledDocument.ElementSpec.StartTagType", true),
              })
          .put(
              new Identifier("COMPONENT_SHOWN"),
              new Import[] {
                newImport("java.awt.event.ComponentEvent.COMPONENT_SHOWN", true),
              })
          .put(
              new Identifier("POSTURE_REGULAR"),
              new Import[] {
                newImport("java.awt.font.TextAttribute.POSTURE_REGULAR", true),
              })
          .put(
              new Identifier("APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTY"),
              new Import[] {
                newImport(
                    "javax.swing.JFileChooser.APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTY", true),
              })
          .put(
              new Identifier("LongStream"),
              new Import[] {
                newImport("java.util.stream.LongStream", false),
              })
          .put(
              new Identifier("setSharedInstance"),
              new Import[] {
                newImport("javax.swing.PopupFactory.setSharedInstance", true),
              })
          .put(
              new Identifier("DocumentFilter"),
              new Import[] {
                newImport("javax.swing.text.DocumentFilter", false),
              })
          .put(
              new Identifier("ImageCapabilities"),
              new Import[] {
                newImport("java.awt.ImageCapabilities", false),
              })
          .put(
              new Identifier("NA_8X10"),
              new Import[] {
                newImport("javax.print.attribute.standard.MediaSizeName.NA_8X10", true),
                newImport("javax.print.attribute.standard.MediaSize.NA.NA_8X10", true),
              })
          .put(
              new Identifier("MultiDocPrintService"),
              new Import[] {
                newImport("javax.print.MultiDocPrintService", false),
              })
          .put(
              new Identifier("AttributedCharacterIterator"),
              new Import[] {
                newImport("java.text.AttributedCharacterIterator", false),
              })
          .put(
              new Identifier("URLStreamHandler"),
              new Import[] {
                newImport("java.net.URLStreamHandler", false),
              })
          .put(
              new Identifier("ForcedBreakWeight"),
              new Import[] {
                newImport("javax.swing.text.View.ForcedBreakWeight", true),
              })
          .put(
              new Identifier("doAs"),
              new Import[] {
                newImport("javax.security.auth.Subject.doAs", true),
              })
          .put(
              new Identifier("scanForPlugins"),
              new Import[] {
                newImport("javax.imageio.ImageIO.scanForPlugins", true),
              })
          .put(
              new Identifier("ContextNotEmptyException"),
              new Import[] {
                newImport("javax.naming.ContextNotEmptyException", false),
              })
          .put(
              new Identifier("BasicToolBarSeparatorUI"),
              new Import[] {
                newImport("javax.swing.plaf.basic.BasicToolBarSeparatorUI", false),
              })
          .put(
              new Identifier("WrongAdapterHelper"),
              new Import[] {
                newImport("org.omg.PortableServer.POAPackage.WrongAdapterHelper", false),
              })
          .put(
              new Identifier("ParserDelegator"),
              new Import[] {
                newImport("javax.swing.text.html.parser.ParserDelegator", false),
              })
          .put(
              new Identifier("VK_CIRCUMFLEX"),
              new Import[] {
                newImport("java.awt.event.KeyEvent.VK_CIRCUMFLEX", true),
              })
          .put(
              new Identifier("intersects"),
              new Import[] {
                newImport("java.awt.geom.Path2D.intersects", true),
              })
          .put(
              new Identifier("HTTP_REQ_TOO_LONG"),
              new Import[] {
                newImport("java.net.HttpURLConnection.HTTP_REQ_TOO_LONG", true),
              })
          .put(
              new Identifier("UnknownError"),
              new Import[] {
                newImport("java.lang.UnknownError", false),
              })
          .put(
              new Identifier("MARKER_WASTE_ALMOST_FULL"),
              new Import[] {
                newImport(
                    "javax.print.attribute.standard.PrinterStateReason.MARKER_WASTE_ALMOST_FULL",
                    true),
              })
          .put(
              new Identifier("XMLFilter"),
              new Import[] {
                newImport("org.xml.sax.XMLFilter", false),
              })
          .put(
              new Identifier("AttributeValueExp"),
              new Import[] {
                newImport("javax.management.AttributeValueExp", false),
              })
          .put(
              new Identifier("HashAttributeSet"),
              new Import[] {
                newImport("javax.print.attribute.HashAttributeSet", false),
              })
          .put(
              new Identifier("EMBEDS_PROPERTY"),
              new Import[] {
                newImport("javax.accessibility.AccessibleRelation.EMBEDS_PROPERTY", true),
              })
          .put(
              new Identifier("BASELINE"),
              new Import[] {
                newImport("java.awt.GridBagConstraints.BASELINE", true),
                newImport("javax.swing.SpringLayout.BASELINE", true),
              })
          .put(
              new Identifier("INTERNAL_FRAME_LAST"),
              new Import[] {
                newImport("javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_LAST", true),
              })
          .put(
              new Identifier("ItalicAction"),
              new Import[] {
                newImport("javax.swing.text.StyledEditorKit.ItalicAction", false),
              })
          .put(
              new Identifier("SignatureValue"),
              new Import[] {
                newImport("javax.xml.crypto.dsig.XMLSignature.SignatureValue", false),
              })
          .put(
              new Identifier("BasicCaret"),
              new Import[] {
                newImport("javax.swing.plaf.basic.BasicTextUI.BasicCaret", false),
              })
          .put(
              new Identifier("firstInMonth"),
              new Import[] {
                newImport("java.time.temporal.TemporalAdjusters.firstInMonth", true),
              })
          .put(
              new Identifier("INV_IDENT"),
              new Import[] {
                newImport("org.omg.CORBA.INV_IDENT", false),
              })
          .put(
              new Identifier("checkedSet"),
              new Import[] {
                newImport("java.util.Collections.checkedSet", true),
              })
          .put(
              new Identifier("ConcurrentHashMap"),
              new Import[] {
                newImport("java.util.concurrent.ConcurrentHashMap", false),
              })
          .put(
              new Identifier("DISPOSE_ON_CLOSE"),
              new Import[] {
                newImport("javax.swing.WindowConstants.DISPOSE_ON_CLOSE", true),
              })
          .put(
              new Identifier("SynthContext"),
              new Import[] {
                newImport("javax.swing.plaf.synth.SynthContext", false),
              })
          .put(
              new Identifier("DocumentParser"),
              new Import[] {
                newImport("javax.swing.text.html.parser.DocumentParser", false),
              })
          .put(
              new Identifier("THREAD_MXBEAN_NAME"),
              new Import[] {
                newImport("java.lang.management.ManagementFactory.THREAD_MXBEAN_NAME", true),
              })
          .put(
              new Identifier("XAException"),
              new Import[] {
                newImport("javax.transaction.xa.XAException", false),
              })
          .put(
              new Identifier("UnknownHostException"),
              new Import[] {
                newImport("java.net.UnknownHostException", false),
                newImport("java.rmi.UnknownHostException", false),
              })
          .put(
              new Identifier("InvalidAttributeIdentifierException"),
              new Import[] {
                newImport("javax.naming.directory.InvalidAttributeIdentifierException", false),
              })
          .put(
              new Identifier("getRowEnd"),
              new Import[] {
                newImport("javax.swing.text.Utilities.getRowEnd", true),
              })
          .put(
              new Identifier("dumpStack"),
              new Import[] {
                newImport("java.lang.Thread.dumpStack", true),
              })
          .put(
              new Identifier("getBreakLocation"),
              new Import[] {
                newImport("javax.swing.text.Utilities.getBreakLocation", true),
              })
          .put(
              new Identifier("MEETEI_MAYEK_EXTENSIONS"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.MEETEI_MAYEK_EXTENSIONS", true),
              })
          .put(
              new Identifier("MBeanServerInvocationHandler"),
              new Import[] {
                newImport("javax.management.MBeanServerInvocationHandler", false),
              })
          .put(
              new Identifier("SearchResult"),
              new Import[] {
                newImport("javax.naming.directory.SearchResult", false),
              })
          .put(
              new Identifier("INTERNAL_FRAME_OPENED"),
              new Import[] {
                newImport("javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_OPENED", true),
              })
          .put(
              new Identifier("newWorkStealingPool"),
              new Import[] {
                newImport("java.util.concurrent.Executors.newWorkStealingPool", true),
              })
          .put(
              new Identifier("XmlMixed"),
              new Import[] {
                newImport("javax.xml.bind.annotation.XmlMixed", false),
              })
          .put(
              new Identifier("PlainView"),
              new Import[] {
                newImport("javax.swing.text.PlainView", false),
              })
          .put(
              new Identifier("OPEN"),
              new Import[] {
                newImport("java.awt.geom.Arc2D.OPEN", true),
                newImport("javax.sound.sampled.LineEvent.Type.OPEN", true),
              })
          .put(
              new Identifier("SeekableByteChannel"),
              new Import[] {
                newImport("java.nio.channels.SeekableByteChannel", false),
              })
          .put(
              new Identifier("UShortSeqHolder"),
              new Import[] {
                newImport("org.omg.CORBA.UShortSeqHolder", false),
              })
          .put(
              new Identifier("StrikeThrough"),
              new Import[] {
                newImport("javax.swing.text.StyleConstants.StrikeThrough", true),
              })
          .put(
              new Identifier("plainTextFlavor"),
              new Import[] {
                newImport("java.awt.datatransfer.DataFlavor.plainTextFlavor", true),
              })
          .put(
              new Identifier("MARCH"),
              new Import[] {
                newImport("java.util.Calendar.MARCH", true),
                newImport("javax.xml.datatype.DatatypeConstants.MARCH", true),
              })
          .put(
              new Identifier("MILLISECOND"),
              new Import[] {
                newImport("java.text.DateFormat.Field.MILLISECOND", true),
                newImport("java.util.Calendar.MILLISECOND", true),
              })
          .put(
              new Identifier("SpinnerListModel"),
              new Import[] {
                newImport("javax.swing.SpinnerListModel", false),
              })
          .put(
              new Identifier("PrintServiceAttributeSet"),
              new Import[] {
                newImport("javax.print.attribute.PrintServiceAttributeSet", false),
              })
          .put(
              new Identifier("Validator"),
              new Import[] {
                newImport("javax.xml.bind.Validator", false),
                newImport("javax.xml.validation.Validator", false),
              })
          .put(
              new Identifier("getSubject"),
              new Import[] {
                newImport("javax.security.auth.Subject.getSubject", true),
              })
          .put(
              new Identifier("ROUND_HALF_UP"),
              new Import[] {
                newImport("java.math.BigDecimal.ROUND_HALF_UP", true),
              })
          .put(
              new Identifier("DynEnumHelper"),
              new Import[] {
                newImport("org.omg.DynamicAny.DynEnumHelper", false),
              })
          .put(
              new Identifier("ServantLocatorHelper"),
              new Import[] {
                newImport("org.omg.PortableServer.ServantLocatorHelper", false),
              })
          .put(
              new Identifier("BooleanHolder"),
              new Import[] {
                newImport("org.omg.CORBA.BooleanHolder", false),
              })
          .put(
              new Identifier("isNaN"),
              new Import[] {
                newImport("java.lang.Double.isNaN", true), newImport("java.lang.Float.isNaN", true),
              })
          .put(
              new Identifier("ReadPendingException"),
              new Import[] {
                newImport("java.nio.channels.ReadPendingException", false),
              })
          .put(
              new Identifier("IdUniquenessPolicyOperations"),
              new Import[] {
                newImport("org.omg.PortableServer.IdUniquenessPolicyOperations", false),
              })
          .put(
              new Identifier("WritableRenderedImage"),
              new Import[] {
                newImport("java.awt.image.WritableRenderedImage", false),
              })
          .put(
              new Identifier("CollationKey"),
              new Import[] {
                newImport("java.text.CollationKey", false),
              })
          .put(
              new Identifier("DESERET"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.DESERET", true),
              })
          .put(
              new Identifier("inForkJoinPool"),
              new Import[] {
                newImport("java.util.concurrent.ForkJoinTask.inForkJoinPool", true),
              })
          .put(
              new Identifier("ALT_DOWN_MASK"),
              new Import[] {
                newImport("java.awt.event.InputEvent.ALT_DOWN_MASK", true),
              })
          .put(
              new Identifier("ORIENTATION_PROPERTY"),
              new Import[] {
                newImport("javax.swing.JSplitPane.ORIENTATION_PROPERTY", true),
              })
          .put(
              new Identifier("XMLValidateContext"),
              new Import[] {
                newImport("javax.xml.crypto.dsig.XMLValidateContext", false),
              })
          .put(
              new Identifier("getWriterFormatNames"),
              new Import[] {
                newImport("javax.imageio.ImageIO.getWriterFormatNames", true),
              })
          .put(
              new Identifier("sinh"),
              new Import[] {
                newImport("java.lang.Math.sinh", true),
                newImport("java.lang.StrictMath.sinh", true),
              })
          .put(
              new Identifier("JobAttributes"),
              new Import[] {
                newImport("java.awt.JobAttributes", false),
              })
          .put(
              new Identifier("SaslClientFactory"),
              new Import[] {
                newImport("javax.security.sasl.SaslClientFactory", false),
              })
          .put(
              new Identifier("InvalidSeq"),
              new Import[] {
                newImport("org.omg.CORBA.DynAnyPackage.InvalidSeq", false),
              })
          .put(
              new Identifier("BasicGraphicsUtils"),
              new Import[] {
                newImport("javax.swing.plaf.basic.BasicGraphicsUtils", false),
              })
          .put(
              new Identifier("USE_ALL_BEANINFO"),
              new Import[] {
                newImport("java.beans.Introspector.USE_ALL_BEANINFO", true),
              })
          .put(
              new Identifier("numberOfLeadingZeros"),
              new Import[] {
                newImport("java.lang.Integer.numberOfLeadingZeros", true),
                newImport("java.lang.Long.numberOfLeadingZeros", true),
              })
          .put(
              new Identifier("ReferralException"),
              new Import[] {
                newImport("javax.naming.ReferralException", false),
              })
          .put(
              new Identifier("InsertBreakAction"),
              new Import[] {
                newImport("javax.swing.text.DefaultEditorKit.InsertBreakAction", false),
              })
          .put(
              new Identifier("_dk_Alias"),
              new Import[] {
                newImport("org.omg.CORBA.DefinitionKind._dk_Alias", true),
              })
          .put(
              new Identifier("BasicDesktopIconUI"),
              new Import[] {
                newImport("javax.swing.plaf.basic.BasicDesktopIconUI", false),
              })
          .put(
              new Identifier("getMenuItemCheckIcon"),
              new Import[] {
                newImport("javax.swing.plaf.basic.BasicIconFactory.getMenuItemCheckIcon", true),
                newImport("javax.swing.plaf.metal.MetalIconFactory.getMenuItemCheckIcon", true),
              })
          .put(
              new Identifier("FileAttributeView"),
              new Import[] {
                newImport("java.nio.file.attribute.FileAttributeView", false),
              })
          .put(
              new Identifier("CANCEL_OPTION"),
              new Import[] {
                newImport("javax.swing.JFileChooser.CANCEL_OPTION", true),
                newImport("javax.swing.JOptionPane.CANCEL_OPTION", true),
              })
          .put(
              new Identifier("scrollbar"),
              new Import[] {
                newImport("java.awt.SystemColor.scrollbar", true),
              })
          .put(
              new Identifier("Action"),
              new Import[] {
                newImport("java.awt.Desktop.Action", false),
                newImport("javax.swing.Action", false),
                newImport("javax.xml.ws.Action", false),
              })
          .put(
              new Identifier("ENV_PERSONAL"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType.ENV_PERSONAL", true),
              })
          .put(
              new Identifier("AdapterManagerIdHelper"),
              new Import[] {
                newImport("org.omg.PortableInterceptor.AdapterManagerIdHelper", false),
              })
          .put(
              new Identifier("PAINT_EVENT_MASK"),
              new Import[] {
                newImport("java.awt.AWTEvent.PAINT_EVENT_MASK", true),
              })
          .put(
              new Identifier("DefaultDesktopManager"),
              new Import[] {
                newImport("javax.swing.DefaultDesktopManager", false),
              })
          .put(
              new Identifier("MenuListener"),
              new Import[] {
                newImport("javax.swing.event.MenuListener", false),
              })
          .put(
              new Identifier("MidiEvent"),
              new Import[] {
                newImport("javax.sound.midi.MidiEvent", false),
              })
          .put(
              new Identifier("Channels"),
              new Import[] {
                newImport("java.nio.channels.Channels", false),
              })
          .put(
              new Identifier("SIGNATURE_VERSION"),
              new Import[] {
                newImport("java.util.jar.Attributes.Name.SIGNATURE_VERSION", true),
              })
          .put(
              new Identifier("NODE_DELETED"),
              new Import[] {
                newImport("org.w3c.dom.UserDataHandler.NODE_DELETED", true),
              })
          .put(
              new Identifier("Proxy"),
              new Import[] {
                newImport("java.lang.reflect.Proxy", false), newImport("java.net.Proxy", false),
              })
          .put(
              new Identifier("selectionEndAction"),
              new Import[] {
                newImport("javax.swing.text.DefaultEditorKit.selectionEndAction", true),
              })
          .put(
              new Identifier("TEXT_HTML_UTF_16LE"),
              new Import[] {
                newImport("javax.print.DocFlavor.BYTE_ARRAY.TEXT_HTML_UTF_16LE", true),
                newImport("javax.print.DocFlavor.INPUT_STREAM.TEXT_HTML_UTF_16LE", true),
                newImport("javax.print.DocFlavor.URL.TEXT_HTML_UTF_16LE", true),
              })
          .put(
              new Identifier("TC_ENDBLOCKDATA"),
              new Import[] {
                newImport("java.io.ObjectStreamConstants.TC_ENDBLOCKDATA", true),
              })
          .put(
              new Identifier("SPACE_SEPARATOR"),
              new Import[] {
                newImport("java.lang.Character.SPACE_SEPARATOR", true),
              })
          .put(
              new Identifier("DHKey"),
              new Import[] {
                newImport("javax.crypto.interfaces.DHKey", false),
              })
          .put(
              new Identifier("MANUAL"),
              new Import[] {
                newImport("javax.print.attribute.standard.MediaTray.MANUAL", true),
              })
          .put(
              new Identifier("icSigHsvData"),
              new Import[] {
                newImport("java.awt.color.ICC_Profile.icSigHsvData", true),
              })
          .put(
              new Identifier("setDefaultCommandMap"),
              new Import[] {
                newImport("javax.activation.CommandMap.setDefaultCommandMap", true),
              })
          .put(
              new Identifier("AbstractDoubleSpliterator"),
              new Import[] {
                newImport("java.util.Spliterators.AbstractDoubleSpliterator", false),
              })
          .put(
              new Identifier("Preferences"),
              new Import[] {
                newImport("java.util.prefs.Preferences", false),
              })
          .put(
              new Identifier("addPropertyChangeListener"),
              new Import[] {
                newImport("javax.swing.UIManager.addPropertyChangeListener", true),
              })
          .put(
              new Identifier("DATATYPE_DOUBLE"),
              new Import[] {
                newImport("javax.imageio.metadata.IIOMetadataFormat.DATATYPE_DOUBLE", true),
              })
          .put(
              new Identifier("BASIC_LATIN"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.BASIC_LATIN", true),
              })
          .put(
              new Identifier("getAncestorOfClass"),
              new Import[] {
                newImport("javax.swing.SwingUtilities.getAncestorOfClass", true),
              })
          .put(
              new Identifier("HTTPBinding"),
              new Import[] {
                newImport("javax.xml.ws.http.HTTPBinding", false),
              })
          .put(
              new Identifier("ServantRetentionPolicyValue"),
              new Import[] {
                newImport("org.omg.PortableServer.ServantRetentionPolicyValue", false),
              })
          .put(
              new Identifier("PutField"),
              new Import[] {
                newImport("java.io.ObjectOutputStream.PutField", false),
              })
          .put(
              new Identifier("MemoryType"),
              new Import[] {
                newImport("java.lang.management.MemoryType", false),
              })
          .put(
              new Identifier("BORDER_BOTTOM"),
              new Import[] {
                newImport("javax.swing.text.html.CSS.Attribute.BORDER_BOTTOM", true),
              })
          .put(
              new Identifier("SHORT_STANDALONE"),
              new Import[] {
                newImport("java.util.Calendar.SHORT_STANDALONE", true),
              })
          .put(
              new Identifier("ConfirmationCallback"),
              new Import[] {
                newImport("javax.security.auth.callback.ConfirmationCallback", false),
              })
          .put(
              new Identifier("SimpleScriptContext"),
              new Import[] {
                newImport("javax.script.SimpleScriptContext", false),
              })
          .put(
              new Identifier("LocaleNameProvider"),
              new Import[] {
                newImport("java.util.spi.LocaleNameProvider", false),
              })
          .put(
              new Identifier("ALIGN_BAR"),
              new Import[] {
                newImport("javax.swing.text.TabStop.ALIGN_BAR", true),
              })
          .put(
              new Identifier("SecurityException"),
              new Import[] {
                newImport("java.lang.SecurityException", false),
              })
          .put(
              new Identifier("parse"),
              new Import[] {
                newImport("java.net.HttpCookie.parse", true),
                newImport("java.time.Duration.parse", true),
                newImport("java.time.Instant.parse", true),
                newImport("java.time.LocalDate.parse", true),
                newImport("java.time.LocalDateTime.parse", true),
                newImport("java.time.LocalTime.parse", true),
                newImport("java.time.MonthDay.parse", true),
                newImport("java.time.OffsetDateTime.parse", true),
                newImport("java.time.OffsetTime.parse", true),
                newImport("java.time.Period.parse", true),
                newImport("java.time.Year.parse", true),
                newImport("java.time.YearMonth.parse", true),
                newImport("java.time.ZonedDateTime.parse", true),
                newImport("java.util.Date.parse", true),
                newImport("java.util.Locale.LanguageRange.parse", true),
                newImport("java.util.logging.Level.parse", true),
              })
          .put(
              new Identifier("IllegalComponentStateException"),
              new Import[] {
                newImport("java.awt.IllegalComponentStateException", false),
              })
          .put(
              new Identifier("UShortSeqHelper"),
              new Import[] {
                newImport("org.omg.CORBA.UShortSeqHelper", false),
              })
          .put(
              new Identifier("VK_SEMICOLON"),
              new Import[] {
                newImport("java.awt.event.KeyEvent.VK_SEMICOLON", true),
              })
          .put(
              new Identifier("SHA512_256"),
              new Import[] {
                newImport("java.security.spec.MGF1ParameterSpec.SHA512_256", true),
              })
          .put(
              new Identifier("OUTPUT_AREA_FULL"),
              new Import[] {
                newImport(
                    "javax.print.attribute.standard.PrinterStateReason.OUTPUT_AREA_FULL", true),
              })
          .put(
              new Identifier("SampleModel"),
              new Import[] {
                newImport("java.awt.image.SampleModel", false),
              })
          .put(
              new Identifier("isDefined"),
              new Import[] {
                newImport("java.lang.Character.isDefined", true),
              })
          .put(
              new Identifier("FilteredImageSource"),
              new Import[] {
                newImport("java.awt.image.FilteredImageSource", false),
              })
          .put(
              new Identifier("StreamDescriptionProperty"),
              new Import[] {
                newImport("javax.swing.text.Document.StreamDescriptionProperty", true),
              })
          .put(
              new Identifier("SAXParserFactory"),
              new Import[] {
                newImport("javax.xml.parsers.SAXParserFactory", false),
              })
          .put(
              new Identifier("AclNotFoundException"),
              new Import[] {
                newImport("java.security.acl.AclNotFoundException", false),
              })
          .put(
              new Identifier("SynthSpinnerUI"),
              new Import[] {
                newImport("javax.swing.plaf.synth.SynthSpinnerUI", false),
              })
          .put(
              new Identifier("IIOByteBuffer"),
              new Import[] {
                newImport("javax.imageio.stream.IIOByteBuffer", false),
              })
          .put(
              new Identifier("HTTP_RESET"),
              new Import[] {
                newImport("java.net.HttpURLConnection.HTTP_RESET", true),
              })
          .put(
              new Identifier("inactive"),
              new Import[] {
                newImport("java.rmi.activation.Activatable.inactive", true),
              })
          .put(
              new Identifier("ComponentInputMapUIResource"),
              new Import[] {
                newImport("javax.swing.plaf.ComponentInputMapUIResource", false),
              })
          .put(
              new Identifier("OutputDeviceAssigned"),
              new Import[] {
                newImport("javax.print.attribute.standard.OutputDeviceAssigned", false),
              })
          .put(
              new Identifier("MacSpi"),
              new Import[] {
                newImport("javax.crypto.MacSpi", false),
              })
          .put(
              new Identifier("getEncoder"),
              new Import[] {
                newImport("java.util.Base64.getEncoder", true),
              })
          .put(
              new Identifier("icSigColorantTableTag"),
              new Import[] {
                newImport("java.awt.color.ICC_Profile.icSigColorantTableTag", true),
              })
          .put(
              new Identifier("ERROR_OPTION"),
              new Import[] {
                newImport("javax.swing.JFileChooser.ERROR_OPTION", true),
              })
          .put(
              new Identifier("SIMPLIFIED_CHINESE"),
              new Import[] {
                newImport("java.util.Locale.SIMPLIFIED_CHINESE", true),
              })
          .put(
              new Identifier("InputEvent"),
              new Import[] {
                newImport("java.awt.event.InputEvent", false),
              })
          .put(
              new Identifier("join"),
              new Import[] {
                newImport("java.lang.String.join", true),
              })
          .put(
              new Identifier("NONUPDATABLE_VIEW_SYNC"),
              new Import[] {
                newImport("javax.sql.rowset.spi.SyncProvider.NONUPDATABLE_VIEW_SYNC", true),
              })
          .put(
              new Identifier("SerializablePermission"),
              new Import[] {
                newImport("java.io.SerializablePermission", false),
              })
          .put(
              new Identifier("FETCH_UNKNOWN"),
              new Import[] {
                newImport("java.sql.ResultSet.FETCH_UNKNOWN", true),
              })
          .put(
              new Identifier("RemoteServer"),
              new Import[] {
                newImport("java.rmi.server.RemoteServer", false),
              })
          .put(
              new Identifier("getMenuBackground"),
              new Import[] {
                newImport("javax.swing.plaf.metal.MetalLookAndFeel.getMenuBackground", true),
              })
          .put(
              new Identifier("BATAK"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.BATAK", true),
              })
          .put(
              new Identifier("Selector"),
              new Import[] {
                newImport("java.nio.channels.Selector", false),
              })
          .put(
              new Identifier("AbortPolicy"),
              new Import[] {
                newImport("java.util.concurrent.ThreadPoolExecutor.AbortPolicy", false),
              })
          .put(
              new Identifier("_tk_ulonglong"),
              new Import[] {
                newImport("org.omg.CORBA.TCKind._tk_ulonglong", true),
              })
          .put(
              new Identifier("IS_CLOSED_PROPERTY"),
              new Import[] {
                newImport("javax.swing.JInternalFrame.IS_CLOSED_PROPERTY", true),
              })
          .put(
              new Identifier("DefaultFocusTraversalPolicy"),
              new Import[] {
                newImport("java.awt.DefaultFocusTraversalPolicy", false),
              })
          .put(
              new Identifier("doubleToLongBits"),
              new Import[] {
                newImport("java.lang.Double.doubleToLongBits", true),
              })
          .put(
              new Identifier("compareUnsigned"),
              new Import[] {
                newImport("java.lang.Integer.compareUnsigned", true),
                newImport("java.lang.Long.compareUnsigned", true),
              })
          .put(
              new Identifier("getPlatformManagementInterfaces"),
              new Import[] {
                newImport(
                    "java.lang.management.ManagementFactory.getPlatformManagementInterfaces", true),
              })
          .put(
              new Identifier("BORDER"),
              new Import[] {
                newImport("javax.swing.text.html.CSS.Attribute.BORDER", true),
                newImport("javax.swing.text.html.HTML.Attribute.BORDER", true),
              })
          .put(
              new Identifier("VALUE_ANTIALIAS_ON"),
              new Import[] {
                newImport("java.awt.RenderingHints.VALUE_ANTIALIAS_ON", true),
              })
          .put(
              new Identifier("HTTP_CREATED"),
              new Import[] {
                newImport("java.net.HttpURLConnection.HTTP_CREATED", true),
              })
          .put(
              new Identifier("TAG_GDEF"),
              new Import[] {
                newImport("java.awt.font.OpenType.TAG_GDEF", true),
              })
          .put(
              new Identifier("StampedLock"),
              new Import[] {
                newImport("java.util.concurrent.locks.StampedLock", false),
              })
          .put(
              new Identifier("Inflater"),
              new Import[] {
                newImport("java.util.zip.Inflater", false),
              })
          .put(
              new Identifier("BoxedValueHelper"),
              new Import[] {
                newImport("org.omg.CORBA.portable.BoxedValueHelper", false),
              })
          .put(
              new Identifier("COLUMN_WIDTH_PROPERTY"),
              new Import[] {
                newImport("javax.swing.table.TableColumn.COLUMN_WIDTH_PROPERTY", true),
              })
          .put(
              new Identifier("DropTargetDropEvent"),
              new Import[] {
                newImport("java.awt.dnd.DropTargetDropEvent", false),
              })
          .put(
              new Identifier("LIST_DIRECTORY"),
              new Import[] {
                newImport("java.nio.file.attribute.AclEntryPermission.LIST_DIRECTORY", true),
              })
          .put(
              new Identifier("getInteriorRectangle"),
              new Import[] {
                newImport("javax.swing.border.AbstractBorder.getInteriorRectangle", true),
              })
          .put(
              new Identifier("WritePendingException"),
              new Import[] {
                newImport("java.nio.channels.WritePendingException", false),
              })
          .put(
              new Identifier("procedureColumnOut"),
              new Import[] {
                newImport("java.sql.DatabaseMetaData.procedureColumnOut", true),
              })
          .put(
              new Identifier("KeyManagementException"),
              new Import[] {
                newImport("java.security.KeyManagementException", false),
              })
          .put(
              new Identifier("ElementScanner8"),
              new Import[] {
                newImport("javax.lang.model.util.ElementScanner8", false),
              })
          .put(
              new Identifier("ElementScanner7"),
              new Import[] {
                newImport("javax.lang.model.util.ElementScanner7", false),
              })
          .put(
              new Identifier("ALIGN"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Attribute.ALIGN", true),
              })
          .put(
              new Identifier("createRaster"),
              new Import[] {
                newImport("java.awt.image.Raster.createRaster", true),
              })
          .put(
              new Identifier("ElementScanner6"),
              new Import[] {
                newImport("javax.lang.model.util.ElementScanner6", false),
              })
          .put(
              new Identifier("BindingType"),
              new Import[] {
                newImport("javax.xml.ws.BindingType", false),
                newImport("org.omg.CosNaming.BindingType", false),
              })
          .put(
              new Identifier("TEXT_CHANGED_PROPERTY"),
              new Import[] {
                newImport("javax.swing.AbstractButton.TEXT_CHANGED_PROPERTY", true),
              })
          .put(
              new Identifier("BACKGROUND_POSITION"),
              new Import[] {
                newImport("javax.swing.text.html.CSS.Attribute.BACKGROUND_POSITION", true),
              })
          .put(
              new Identifier("IDREF"),
              new Import[] {
                newImport("javax.swing.text.html.parser.DTDConstants.IDREF", true),
              })
          .put(
              new Identifier("BindingTypeHolder"),
              new Import[] {
                newImport("org.omg.CosNaming.BindingTypeHolder", false),
              })
          .put(
              new Identifier("VIEWPORT"),
              new Import[] {
                newImport("javax.accessibility.AccessibleRole.VIEWPORT", true),
                newImport("javax.swing.ScrollPaneConstants.VIEWPORT", true),
                newImport("javax.swing.plaf.synth.Region.VIEWPORT", true),
              })
          .put(
              new Identifier("CryptoPrimitive"),
              new Import[] {
                newImport("java.security.CryptoPrimitive", false),
              })
          .put(
              new Identifier("DatagramChannel"),
              new Import[] {
                newImport("java.nio.channels.DatagramChannel", false),
              })
          .put(
              new Identifier("Deque"),
              new Import[] {
                newImport("java.util.Deque", false),
              })
          .put(
              new Identifier("Annotation"),
              new Import[] {
                newImport("java.lang.annotation.Annotation", false),
                newImport("java.text.Annotation", false),
              })
          .put(
              new Identifier("NamingSecurityException"),
              new Import[] {
                newImport("javax.naming.NamingSecurityException", false),
              })
          .put(
              new Identifier("Panel"),
              new Import[] {
                newImport("java.awt.Panel", false),
              })
          .put(
              new Identifier("InputMethodRequests"),
              new Import[] {
                newImport("java.awt.im.InputMethodRequests", false),
              })
          .put(
              new Identifier("ThreadFactory"),
              new Import[] {
                newImport("java.util.concurrent.ThreadFactory", false),
              })
          .put(
              new Identifier("LETTER"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType.LETTER", true),
                newImport("javax.print.attribute.standard.MediaSize.NA.LETTER", true),
              })
          .put(
              new Identifier("XPathType"),
              new Import[] {
                newImport("javax.xml.crypto.dsig.spec.XPathType", false),
              })
          .put(
              new Identifier("ActionEvent"),
              new Import[] {
                newImport("java.awt.event.ActionEvent", false),
              })
          .put(
              new Identifier("ofEpochMilli"),
              new Import[] {
                newImport("java.time.Instant.ofEpochMilli", true),
              })
          .put(
              new Identifier("OBJECT_SCOPE"),
              new Import[] {
                newImport("javax.naming.directory.SearchControls.OBJECT_SCOPE", true),
                newImport("javax.naming.event.EventContext.OBJECT_SCOPE", true),
              })
          .put(
              new Identifier("VALUE"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Attribute.VALUE", true),
              })
          .put(
              new Identifier("getAccessibleAt"),
              new Import[] {
                newImport("javax.swing.SwingUtilities.getAccessibleAt", true),
              })
          .put(
              new Identifier("AccessException"),
              new Import[] {
                newImport("java.rmi.AccessException", false),
              })
          .put(
              new Identifier("DiscardPolicy"),
              new Import[] {
                newImport("java.util.concurrent.ThreadPoolExecutor.DiscardPolicy", false),
              })
          .put(
              new Identifier("JAXB_CONTEXT_FACTORY"),
              new Import[] {
                newImport("javax.xml.bind.JAXBContext.JAXB_CONTEXT_FACTORY", true),
              })
          .put(
              new Identifier("LdapReferralException"),
              new Import[] {
                newImport("javax.naming.ldap.LdapReferralException", false),
              })
          .put(
              new Identifier("DOMStructure"),
              new Import[] {
                newImport("javax.xml.crypto.dom.DOMStructure", false),
              })
          .put(
              new Identifier("Lookup"),
              new Import[] {
                newImport("java.lang.invoke.MethodHandles.Lookup", false),
              })
          .put(
              new Identifier("MINUTE"),
              new Import[] {
                newImport("java.text.DateFormat.Field.MINUTE", true),
                newImport("java.util.Calendar.MINUTE", true),
              })
          .put(
              new Identifier("VK_NONCONVERT"),
              new Import[] {
                newImport("java.awt.event.KeyEvent.VK_NONCONVERT", true),
              })
          .put(
              new Identifier("BLIT_SCROLL_MODE"),
              new Import[] {
                newImport("javax.swing.JViewport.BLIT_SCROLL_MODE", true),
              })
          .put(
              new Identifier("BufferUnderflowException"),
              new Import[] {
                newImport("java.nio.BufferUnderflowException", false),
              })
          .put(
              new Identifier("EXTSIZ"),
              new Import[] {
                newImport("java.util.jar.JarEntry.EXTSIZ", true),
                newImport("java.util.jar.JarFile.EXTSIZ", true),
                newImport("java.util.jar.JarInputStream.EXTSIZ", true),
                newImport("java.util.jar.JarOutputStream.EXTSIZ", true),
                newImport("java.util.zip.ZipEntry.EXTSIZ", true),
                newImport("java.util.zip.ZipFile.EXTSIZ", true),
                newImport("java.util.zip.ZipInputStream.EXTSIZ", true),
                newImport("java.util.zip.ZipOutputStream.EXTSIZ", true),
              })
          .put(
              new Identifier("LOCHDR"),
              new Import[] {
                newImport("java.util.jar.JarEntry.LOCHDR", true),
                newImport("java.util.jar.JarFile.LOCHDR", true),
                newImport("java.util.jar.JarInputStream.LOCHDR", true),
                newImport("java.util.jar.JarOutputStream.LOCHDR", true),
                newImport("java.util.zip.ZipEntry.LOCHDR", true),
                newImport("java.util.zip.ZipFile.LOCHDR", true),
                newImport("java.util.zip.ZipInputStream.LOCHDR", true),
                newImport("java.util.zip.ZipOutputStream.LOCHDR", true),
              })
          .put(
              new Identifier("Tool"),
              new Import[] {
                newImport("javax.tools.Tool", false),
              })
          .put(
              new Identifier("JoinFractureDirection"),
              new Import[] {
                newImport(
                    "javax.swing.text.DefaultStyledDocument.ElementSpec.JoinFractureDirection",
                    true),
              })
          .put(
              new Identifier("Receiver"),
              new Import[] {
                newImport("javax.sound.midi.Receiver", false),
              })
          .put(
              new Identifier("icSigPreview1Tag"),
              new Import[] {
                newImport("java.awt.color.ICC_Profile.icSigPreview1Tag", true),
              })
          .put(
              new Identifier("beginWordAction"),
              new Import[] {
                newImport("javax.swing.text.DefaultEditorKit.beginWordAction", true),
              })
          .put(
              new Identifier("icSigHlsData"),
              new Import[] {
                newImport("java.awt.color.ICC_Profile.icSigHlsData", true),
              })
          .put(
              new Identifier("FONT_WEIGHT"),
              new Import[] {
                newImport("javax.swing.text.html.CSS.Attribute.FONT_WEIGHT", true),
              })
          .put(
              new Identifier("EntityResolver"),
              new Import[] {
                newImport("org.xml.sax.EntityResolver", false),
              })
          .put(
              new Identifier("OBJECT"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.OBJECT", true),
              })
          .put(
              new Identifier("Double"),
              new Import[] {
                newImport("java.awt.geom.Arc2D.Double", false),
                newImport("java.awt.geom.CubicCurve2D.Double", false),
                newImport("java.awt.geom.Ellipse2D.Double", false),
                newImport("java.awt.geom.Line2D.Double", false),
                newImport("java.awt.geom.Path2D.Double", false),
                newImport("java.awt.geom.Point2D.Double", false),
                newImport("java.awt.geom.QuadCurve2D.Double", false),
                newImport("java.awt.geom.Rectangle2D.Double", false),
                newImport("java.awt.geom.RoundRectangle2D.Double", false),
                newImport("java.lang.Double", false),
              })
          .put(
              new Identifier("EXTSIG"),
              new Import[] {
                newImport("java.util.jar.JarEntry.EXTSIG", true),
                newImport("java.util.jar.JarFile.EXTSIG", true),
                newImport("java.util.jar.JarInputStream.EXTSIG", true),
                newImport("java.util.jar.JarOutputStream.EXTSIG", true),
                newImport("java.util.zip.ZipEntry.EXTSIG", true),
                newImport("java.util.zip.ZipFile.EXTSIG", true),
                newImport("java.util.zip.ZipInputStream.EXTSIG", true),
                newImport("java.util.zip.ZipOutputStream.EXTSIG", true),
              })
          .put(
              new Identifier("CredentialNotFoundException"),
              new Import[] {
                newImport("javax.security.auth.login.CredentialNotFoundException", false),
              })
          .put(
              new Identifier("UTC_TIME"),
              new Import[] {
                newImport("java.util.SimpleTimeZone.UTC_TIME", true),
              })
          .put(
              new Identifier("getURLContext"),
              new Import[] {
                newImport("javax.naming.spi.NamingManager.getURLContext", true),
              })
          .put(
              new Identifier("setIcon"),
              new Import[] {
                newImport("javax.swing.text.StyleConstants.setIcon", true),
              })
          .put(
              new Identifier("SC_SERIALIZABLE"),
              new Import[] {
                newImport("java.io.ObjectStreamConstants.SC_SERIALIZABLE", true),
              })
          .put(
              new Identifier("DEFAULT_CLASS_LOADER_NAME"),
              new Import[] {
                newImport(
                    "javax.management.remote.JMXConnectorServerFactory.DEFAULT_CLASS_LOADER_NAME",
                    true),
              })
          .put(
              new Identifier("forwardAction"),
              new Import[] {
                newImport("javax.swing.text.DefaultEditorKit.forwardAction", true),
              })
          .put(
              new Identifier("GSSCredential"),
              new Import[] {
                newImport("org.ietf.jgss.GSSCredential", false),
              })
          .put(
              new Identifier("WINDOW_LAST"),
              new Import[] {
                newImport("java.awt.event.WindowEvent.WINDOW_LAST", true),
              })
          .put(
              new Identifier("KeyStroke"),
              new Import[] {
                newImport("javax.swing.KeyStroke", false),
              })
          .put(
              new Identifier("setInitialContextFactoryBuilder"),
              new Import[] {
                newImport("javax.naming.spi.NamingManager.setInitialContextFactoryBuilder", true),
              })
          .put(
              new Identifier("setLogStream"),
              new Import[] {
                newImport("java.sql.DriverManager.setLogStream", true),
                newImport("javax.swing.DebugGraphics.setLogStream", true),
              })
          .put(
              new Identifier("ofHoursMinutesSeconds"),
              new Import[] {
                newImport("java.time.ZoneOffset.ofHoursMinutesSeconds", true),
              })
          .put(
              new Identifier("Dictionary"),
              new Import[] {
                newImport("java.util.Dictionary", false),
              })
          .put(
              new Identifier("DragGestureEvent"),
              new Import[] {
                newImport("java.awt.dnd.DragGestureEvent", false),
              })
          .put(
              new Identifier("LineListener"),
              new Import[] {
                newImport("javax.sound.sampled.LineListener", false),
              })
          .put(
              new Identifier("LineUnavailableException"),
              new Import[] {
                newImport("javax.sound.sampled.LineUnavailableException", false),
              })
          .put(
              new Identifier("PrinterException"),
              new Import[] {
                newImport("java.awt.print.PrinterException", false),
              })
          .put(
              new Identifier("LastOwnerException"),
              new Import[] {
                newImport("java.security.acl.LastOwnerException", false),
              })
          .put(
              new Identifier("getLocalBounds"),
              new Import[] {
                newImport("javax.swing.SwingUtilities.getLocalBounds", true),
              })
          .put(
              new Identifier("InlineView"),
              new Import[] {
                newImport("javax.swing.text.html.InlineView", false),
              })
          .put(
              new Identifier("BeanContextSupport"),
              new Import[] {
                newImport("java.beans.beancontext.BeanContextSupport", false),
              })
          .put(
              new Identifier("WindowConstants"),
              new Import[] {
                newImport("javax.swing.WindowConstants", false),
              })
          .put(
              new Identifier("ThreadInfo"),
              new Import[] {
                newImport("java.lang.management.ThreadInfo", false),
              })
          .put(
              new Identifier("NetworkChannel"),
              new Import[] {
                newImport("java.nio.channels.NetworkChannel", false),
              })
          .put(
              new Identifier("DPCM"),
              new Import[] {
                newImport("javax.print.attribute.ResolutionSyntax.DPCM", true),
              })
          .put(
              new Identifier("getLoopbackAddress"),
              new Import[] {
                newImport("java.net.InetAddress.getLoopbackAddress", true),
              })
          .put(
              new Identifier("console"),
              new Import[] {
                newImport("java.lang.System.console", true),
              })
          .put(
              new Identifier("Comment"),
              new Import[] {
                newImport("javax.xml.stream.events.Comment", false),
                newImport("org.w3c.dom.Comment", false),
              })
          .put(
              new Identifier("DoubleHolder"),
              new Import[] {
                newImport("org.omg.CORBA.DoubleHolder", false),
              })
          .put(
              new Identifier("SINGLEFRAMEDONE"),
              new Import[] {
                newImport("java.awt.image.ImageConsumer.SINGLEFRAMEDONE", true),
              })
          .put(
              new Identifier("ChoiceFormat"),
              new Import[] {
                newImport("java.text.ChoiceFormat", false),
              })
          .put(
              new Identifier("isWrapperInstance"),
              new Import[] {
                newImport("java.lang.invoke.MethodHandleProxies.isWrapperInstance", true),
              })
          .put(
              new Identifier("control"),
              new Import[] {
                newImport("java.awt.SystemColor.control", true),
              })
          .put(
              new Identifier("OrientationRequestedType"),
              new Import[] {
                newImport("java.awt.PageAttributes.OrientationRequestedType", false),
              })
          .put(
              new Identifier("AbstractListModel"),
              new Import[] {
                newImport("javax.swing.AbstractListModel", false),
              })
          .put(
              new Identifier("BUGINESE"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.BUGINESE", true),
              })
          .put(
              new Identifier("TrustedCertificateEntry"),
              new Import[] {
                newImport("java.security.KeyStore.TrustedCertificateEntry", false),
              })
          .put(
              new Identifier("FileImageInputStream"),
              new Import[] {
                newImport("javax.imageio.stream.FileImageInputStream", false),
              })
          .put(
              new Identifier("Size2DSyntax"),
              new Import[] {
                newImport("javax.print.attribute.Size2DSyntax", false),
              })
          .put(
              new Identifier("OBJECT_NOT_EXIST"),
              new Import[] {
                newImport("org.omg.CORBA.OBJECT_NOT_EXIST", false),
              })
          .put(
              new Identifier("VK_STOP"),
              new Import[] {
                newImport("java.awt.event.KeyEvent.VK_STOP", true),
              })
          .put(
              new Identifier("ENABLED"),
              new Import[] {
                newImport("javax.accessibility.AccessibleState.ENABLED", true),
                newImport("javax.swing.DefaultButtonModel.ENABLED", true),
                newImport("javax.swing.plaf.synth.SynthConstants.ENABLED", true),
              })
          .build();
}
