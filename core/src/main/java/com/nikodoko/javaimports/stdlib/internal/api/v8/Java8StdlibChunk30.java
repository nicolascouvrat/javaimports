// Code generated by GenerateStdlib.java. DO NOT EDIT.
package com.nikodoko.javaimports.stdlib.internal.api.v8;

import static com.nikodoko.javaimports.stdlib.internal.Stdlib.newImport;

import com.google.common.collect.ImmutableMap;
import com.nikodoko.javaimports.common.Identifier;
import com.nikodoko.javaimports.common.Import;
import java.util.Map;

public class Java8StdlibChunk30 {
  static final Map<Identifier, Import[]> CLASSES =
      new ImmutableMap.Builder<Identifier, Import[]>()
          .put(
              new Identifier("UnknownFormatFlagsException"),
              new Import[] {
                newImport("java.util.UnknownFormatFlagsException", false),
              })
          .put(
              new Identifier("getFileSystemView"),
              new Import[] {
                newImport("javax.swing.filechooser.FileSystemView.getFileSystemView", true),
              })
          .put(
              new Identifier("MANDAIC"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.MANDAIC", true),
              })
          .put(
              new Identifier("getFrames"),
              new Import[] {
                newImport("java.awt.Frame.getFrames", true),
              })
          .put(
              new Identifier("InvalidPolicy"),
              new Import[] {
                newImport("org.omg.PortableServer.POAPackage.InvalidPolicy", false),
              })
          .put(
              new Identifier("MORE_THAN_MAX_ROLE_DEGREE"),
              new Import[] {
                newImport("javax.management.relation.RoleStatus.MORE_THAN_MAX_ROLE_DEGREE", true),
              })
          .put(
              new Identifier("SADDLE_STITCH"),
              new Import[] {
                newImport("javax.print.attribute.standard.Finishings.SADDLE_STITCH", true),
              })
          .put(
              new Identifier("WSDL_PORT"),
              new Import[] {
                newImport("javax.xml.ws.Endpoint.WSDL_PORT", true),
                newImport("javax.xml.ws.handler.MessageContext.WSDL_PORT", true),
              })
          .put(
              new Identifier("getFlatness"),
              new Import[] {
                newImport("java.awt.geom.CubicCurve2D.getFlatness", true),
                newImport("java.awt.geom.QuadCurve2D.getFlatness", true),
              })
          .put(
              new Identifier("CJK_RADICALS_SUPPLEMENT"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.CJK_RADICALS_SUPPLEMENT", true),
              })
          .put(
              new Identifier("ContentHandler"),
              new Import[] {
                newImport("java.net.ContentHandler", false),
                newImport("org.xml.sax.ContentHandler", false),
              })
          .put(
              new Identifier("FRACTION"),
              new Import[] {
                newImport("java.text.NumberFormat.Field.FRACTION", true),
              })
          .put(
              new Identifier("AccessibleTextSequence"),
              new Import[] {
                newImport("javax.accessibility.AccessibleTextSequence", false),
              })
          .put(
              new Identifier("icSigPs2RenderingIntentTag"),
              new Import[] {
                newImport("java.awt.color.ICC_Profile.icSigPs2RenderingIntentTag", true),
              })
          .put(
              new Identifier("InvalidNameException"),
              new Import[] {
                newImport("javax.naming.InvalidNameException", false),
              })
          .put(
              new Identifier("selectionEndWordAction"),
              new Import[] {
                newImport("javax.swing.text.DefaultEditorKit.selectionEndWordAction", true),
              })
          .put(
              new Identifier("MOUSE_DRAG"),
              new Import[] {
                newImport("java.awt.Event.MOUSE_DRAG", true),
              })
          .put(
              new Identifier("WCharSeqHolder"),
              new Import[] {
                newImport("org.omg.CORBA.WCharSeqHolder", false),
              })
          .put(
              new Identifier("FileSystemAlreadyExistsException"),
              new Import[] {
                newImport("java.nio.file.FileSystemAlreadyExistsException", false),
              })
          .put(
              new Identifier("CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTY"),
              new Import[] {
                newImport(
                    "javax.swing.JFileChooser.CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTY", true),
              })
          .put(
              new Identifier("VERTICAL_ALIGNMENT_CHANGED_PROPERTY"),
              new Import[] {
                newImport("javax.swing.AbstractButton.VERTICAL_ALIGNMENT_CHANGED_PROPERTY", true),
              })
          .put(
              new Identifier("CHARACTER_SET_ENCODING"),
              new Import[] {
                newImport("javax.xml.soap.SOAPMessage.CHARACTER_SET_ENCODING", true),
              })
          .put(
              new Identifier("currentThread"),
              new Import[] {
                newImport("java.lang.Thread.currentThread", true),
              })
          .put(
              new Identifier("MetalSplitPaneUI"),
              new Import[] {
                newImport("javax.swing.plaf.metal.MetalSplitPaneUI", false),
              })
          .put(
              new Identifier("PRIOR"),
              new Import[] {
                newImport("java.awt.BufferCapabilities.FlipContents.PRIOR", true),
              })
          .put(
              new Identifier("DefaultComboBoxModel"),
              new Import[] {
                newImport("javax.swing.DefaultComboBoxModel", false),
              })
          .put(
              new Identifier("TAG_TRAK"),
              new Import[] {
                newImport("java.awt.font.OpenType.TAG_TRAK", true),
              })
          .put(
              new Identifier("invoker"),
              new Import[] {
                newImport("java.lang.invoke.MethodHandles.invoker", true),
              })
          .put(
              new Identifier("VK_AMPERSAND"),
              new Import[] {
                newImport("java.awt.event.KeyEvent.VK_AMPERSAND", true),
              })
          .put(
              new Identifier("LIGATURES_ON"),
              new Import[] {
                newImport("java.awt.font.TextAttribute.LIGATURES_ON", true),
              })
          .put(
              new Identifier("UnsupportedLookAndFeelException"),
              new Import[] {
                newImport("javax.swing.UnsupportedLookAndFeelException", false),
              })
          .put(
              new Identifier("TIMING_CLOCK"),
              new Import[] {
                newImport("javax.sound.midi.ShortMessage.TIMING_CLOCK", true),
              })
          .put(
              new Identifier("PosixFileAttributes"),
              new Import[] {
                newImport("java.nio.file.attribute.PosixFileAttributes", false),
              })
          .put(
              new Identifier("getCopyAction"),
              new Import[] {
                newImport("javax.swing.TransferHandler.getCopyAction", true),
              })
          .put(
              new Identifier("ANCESTOR_REMOVED"),
              new Import[] {
                newImport("javax.swing.event.AncestorEvent.ANCESTOR_REMOVED", true),
              })
          .put(
              new Identifier("icSigScreeningDescTag"),
              new Import[] {
                newImport("java.awt.color.ICC_Profile.icSigScreeningDescTag", true),
              })
          .put(
              new Identifier("HTTP_PARTIAL"),
              new Import[] {
                newImport("java.net.HttpURLConnection.HTTP_PARTIAL", true),
              })
          .put(
              new Identifier("MGF1ParameterSpec"),
              new Import[] {
                newImport("java.security.spec.MGF1ParameterSpec", false),
              })
          .put(
              new Identifier("DEFAULT_SIZE"),
              new Import[] {
                newImport("javax.swing.GroupLayout.DEFAULT_SIZE", true),
              })
          .put(
              new Identifier("HTML_CONTAINER"),
              new Import[] {
                newImport("javax.accessibility.AccessibleRole.HTML_CONTAINER", true),
              })
          .put(
              new Identifier("AbstractCollection"),
              new Import[] {
                newImport("java.util.AbstractCollection", false),
              })
          .put(
              new Identifier("sum"),
              new Import[] {
                newImport("java.lang.Double.sum", true),
                newImport("java.lang.Float.sum", true),
                newImport("java.lang.Integer.sum", true),
                newImport("java.lang.Long.sum", true),
                newImport("javax.swing.Spring.sum", true),
              })
          .put(
              new Identifier("UNDERLINE"),
              new Import[] {
                newImport("java.awt.font.TextAttribute.UNDERLINE", true),
              })
          .put(
              new Identifier("CharArrayWriter"),
              new Import[] {
                newImport("java.io.CharArrayWriter", false),
              })
          .put(
              new Identifier("PipedReader"),
              new Import[] {
                newImport("java.io.PipedReader", false),
              })
          .put(
              new Identifier("current"),
              new Import[] {
                newImport("java.util.concurrent.ThreadLocalRandom.current", true),
              })
          .put(
              new Identifier("Temporal"),
              new Import[] {
                newImport("java.time.temporal.Temporal", false),
              })
          .put(
              new Identifier("MOUSE_EXITED"),
              new Import[] {
                newImport("java.awt.event.MouseEvent.MOUSE_EXITED", true),
              })
          .put(
              new Identifier("CubicCurve2D"),
              new Import[] {
                newImport("java.awt.geom.CubicCurve2D", false),
              })
          .put(
              new Identifier("SYLOTI_NAGRI"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.SYLOTI_NAGRI", true),
              })
          .put(
              new Identifier("DataBufferUShort"),
              new Import[] {
                newImport("java.awt.image.DataBufferUShort", false),
              })
          .put(
              new Identifier("BooleanSupplier"),
              new Import[] {
                newImport("java.util.function.BooleanSupplier", false),
              })
          .put(
              new Identifier("UNLIMITED"),
              new Import[] {
                newImport("java.math.MathContext.UNLIMITED", true),
              })
          .put(
              new Identifier("LONG"),
              new Import[] {
                newImport("java.text.DateFormat.LONG", true),
                newImport("java.util.Calendar.LONG", true),
                newImport("java.util.TimeZone.LONG", true),
                newImport("javax.management.openmbean.SimpleType.LONG", true),
              })
          .put(
              new Identifier("TypeMismatch"),
              new Import[] {
                newImport("org.omg.CORBA.DynAnyPackage.TypeMismatch", false),
                newImport("org.omg.DynamicAny.DynAnyPackage.TypeMismatch", false),
                newImport("org.omg.IOP.CodecPackage.TypeMismatch", false),
              })
          .put(
              new Identifier("roleValueToString"),
              new Import[] {
                newImport("javax.management.relation.Role.roleValueToString", true),
              })
          .put(
              new Identifier("HIRAGANA"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.HIRAGANA", true),
              })
          .put(
              new Identifier("LongBinaryOperator"),
              new Import[] {
                newImport("java.util.function.LongBinaryOperator", false),
              })
          .put(
              new Identifier("VALUE_RANGE_MIN_INCLUSIVE_MASK"),
              new Import[] {
                newImport(
                    "javax.imageio.metadata.IIOMetadataFormat.VALUE_RANGE_MIN_INCLUSIVE_MASK",
                    true),
              })
          .put(
              new Identifier("NON_SPACING_MARK"),
              new Import[] {
                newImport("java.lang.Character.NON_SPACING_MARK", true),
              })
          .put(
              new Identifier("CachedRowSet"),
              new Import[] {
                newImport("javax.sql.rowset.CachedRowSet", false),
              })
          .put(
              new Identifier("VK_DOLLAR"),
              new Import[] {
                newImport("java.awt.event.KeyEvent.VK_DOLLAR", true),
              })
          .put(
              new Identifier("isMiddleMouseButton"),
              new Import[] {
                newImport("javax.swing.SwingUtilities.isMiddleMouseButton", true),
              })
          .put(
              new Identifier("NA_LEGAL"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType.NA_LEGAL", true),
                newImport("javax.print.attribute.standard.MediaSizeName.NA_LEGAL", true),
              })
          .put(
              new Identifier("SQLOutput"),
              new Import[] {
                newImport("java.sql.SQLOutput", false),
              })
          .put(
              new Identifier("emptyListIterator"),
              new Import[] {
                newImport("java.util.Collections.emptyListIterator", true),
              })
          .put(
              new Identifier("COMPONENT"),
              new Import[] {
                newImport("java.awt.font.GlyphMetrics.COMPONENT", true),
              })
          .put(
              new Identifier("ReadOnlyFileSystemException"),
              new Import[] {
                newImport("java.nio.file.ReadOnlyFileSystemException", false),
              })
          .put(
              new Identifier("_dk_Sequence"),
              new Import[] {
                newImport("org.omg.CORBA.DefinitionKind._dk_Sequence", true),
              })
          .put(
              new Identifier("PortableRemoteObject"),
              new Import[] {
                newImport("javax.rmi.PortableRemoteObject", false),
              })
          .put(
              new Identifier("NO_CONTEXT"),
              new Import[] {
                newImport("org.ietf.jgss.GSSException.NO_CONTEXT", true),
              })
          .put(
              new Identifier("RuleBasedCollator"),
              new Import[] {
                newImport("java.text.RuleBasedCollator", false),
              })
          .put(
              new Identifier("LOWERCASE_LETTER"),
              new Import[] {
                newImport("java.lang.Character.LOWERCASE_LETTER", true),
              })
          .put(
              new Identifier("ClientRequestInterceptorOperations"),
              new Import[] {
                newImport("org.omg.PortableInterceptor.ClientRequestInterceptorOperations", false),
              })
          .put(
              new Identifier("PRINTER_STOPPED"),
              new Import[] {
                newImport("javax.print.attribute.standard.JobStateReason.PRINTER_STOPPED", true),
              })
          .put(
              new Identifier("HTTP_PRECON_FAILED"),
              new Import[] {
                newImport("java.net.HttpURLConnection.HTTP_PRECON_FAILED", true),
              })
          .put(
              new Identifier("frequency"),
              new Import[] {
                newImport("java.util.Collections.frequency", true),
              })
          .put(
              new Identifier("APPLY_REVERB"),
              new Import[] {
                newImport("javax.sound.sampled.BooleanControl.Type.APPLY_REVERB", true),
              })
          .put(
              new Identifier("HyperlinkListener"),
              new Import[] {
                newImport("javax.swing.event.HyperlinkListener", false),
              })
          .put(
              new Identifier("PortableRemoteObjectDelegate"),
              new Import[] {
                newImport("javax.rmi.CORBA.PortableRemoteObjectDelegate", false),
              })
          .put(
              new Identifier("currentGroupID"),
              new Import[] {
                newImport("java.rmi.activation.ActivationGroup.currentGroupID", true),
              })
          .put(
              new Identifier("VALUE_FRACTIONALMETRICS_OFF"),
              new Import[] {
                newImport("java.awt.RenderingHints.VALUE_FRACTIONALMETRICS_OFF", true),
              })
          .put(
              new Identifier("RenderableImageProducer"),
              new Import[] {
                newImport("java.awt.image.renderable.RenderableImageProducer", false),
              })
          .put(
              new Identifier("BasicHTML"),
              new Import[] {
                newImport("javax.swing.plaf.basic.BasicHTML", false),
              })
          .put(
              new Identifier("generate"),
              new Import[] {
                newImport("java.util.stream.DoubleStream.generate", true),
                newImport("java.util.stream.IntStream.generate", true),
                newImport("java.util.stream.LongStream.generate", true),
                newImport("java.util.stream.Stream.generate", true),
              })
          .put(
              new Identifier("Authenticator"),
              new Import[] {
                newImport("java.net.Authenticator", false),
              })
          .put(
              new Identifier("UnknownAnnotationValueException"),
              new Import[] {
                newImport("javax.lang.model.element.UnknownAnnotationValueException", false),
              })
          .put(
              new Identifier("RuntimeOperationsException"),
              new Import[] {
                newImport("javax.management.RuntimeOperationsException", false),
              })
          .put(
              new Identifier("getFileChooserHomeFolderIcon"),
              new Import[] {
                newImport(
                    "javax.swing.plaf.metal.MetalIconFactory.getFileChooserHomeFolderIcon", true),
              })
          .put(
              new Identifier("setFlashCount"),
              new Import[] {
                newImport("javax.swing.DebugGraphics.setFlashCount", true),
              })
          .put(
              new Identifier("ISO_A4_WHITE"),
              new Import[] {
                newImport("javax.print.attribute.standard.MediaName.ISO_A4_WHITE", true),
              })
          .put(
              new Identifier("RowSorter"),
              new Import[] {
                newImport("javax.swing.RowSorter", false),
              })
          .put(
              new Identifier("PROPERTY"),
              new Import[] {
                newImport("org.w3c.dom.bootstrap.DOMImplementationRegistry.PROPERTY", true),
              })
          .put(
              new Identifier("getAccessibleIndexInParent"),
              new Import[] {
                newImport("javax.swing.SwingUtilities.getAccessibleIndexInParent", true),
              })
          .put(
              new Identifier("DnDConstants"),
              new Import[] {
                newImport("java.awt.dnd.DnDConstants", false),
              })
          .put(
              new Identifier("RUN_DIRECTION_RTL"),
              new Import[] {
                newImport("java.awt.font.TextAttribute.RUN_DIRECTION_RTL", true),
              })
          .put(
              new Identifier("LEAD_EQUALS"),
              new Import[] {
                newImport("javax.swing.text.TabStop.LEAD_EQUALS", true),
              })
          .put(
              new Identifier("UNASSIGNED"),
              new Import[] {
                newImport("java.lang.Character.UNASSIGNED", true),
              })
          .put(
              new Identifier("MARGIN"),
              new Import[] {
                newImport("javax.swing.text.html.CSS.Attribute.MARGIN", true),
              })
          .put(
              new Identifier("SourceLocator"),
              new Import[] {
                newImport("javax.xml.transform.SourceLocator", false),
              })
          .put(
              new Identifier("ActivationGroupDesc"),
              new Import[] {
                newImport("java.rmi.activation.ActivationGroupDesc", false),
              })
          .put(
              new Identifier("SELECTION"),
              new Import[] {
                newImport("java.awt.JobAttributes.DefaultSelectionType.SELECTION", true),
              })
          .put(
              new Identifier("ReflectPermission"),
              new Import[] {
                newImport("java.lang.reflect.ReflectPermission", false),
              })
          .put(
              new Identifier("NA_9X12_ENVELOPE"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType.NA_9X12_ENVELOPE", true),
                newImport("javax.print.attribute.standard.MediaSizeName.NA_9X12_ENVELOPE", true),
              })
          .put(
              new Identifier("DocFlavor"),
              new Import[] {
                newImport("javax.print.DocFlavor", false),
              })
          .put(
              new Identifier("JobOriginatingUserName"),
              new Import[] {
                newImport("javax.print.attribute.standard.JobOriginatingUserName", false),
              })
          .put(
              new Identifier("Certificate"),
              new Import[] {
                newImport("java.security.Certificate", false),
                newImport("java.security.cert.Certificate", false),
                newImport("javax.security.cert.Certificate", false),
              })
          .put(
              new Identifier("MulticastSocket"),
              new Import[] {
                newImport("java.net.MulticastSocket", false),
              })
          .put(
              new Identifier("JMXConnectorFactory"),
              new Import[] {
                newImport("javax.management.remote.JMXConnectorFactory", false),
              })
          .put(
              new Identifier("getStaticAttributeKey"),
              new Import[] {
                newImport("javax.swing.text.StyleContext.getStaticAttributeKey", true),
              })
          .put(
              new Identifier("TAG_MMFX"),
              new Import[] {
                newImport("java.awt.font.OpenType.TAG_MMFX", true),
              })
          .put(
              new Identifier("Driver"),
              new Import[] {
                newImport("java.sql.Driver", false),
              })
          .put(
              new Identifier("DynUnion"),
              new Import[] {
                newImport("org.omg.CORBA.DynUnion", false),
                newImport("org.omg.DynamicAny.DynUnion", false),
              })
          .put(
              new Identifier("cbrt"),
              new Import[] {
                newImport("java.lang.Math.cbrt", true),
                newImport("java.lang.StrictMath.cbrt", true),
              })
          .put(
              new Identifier("BASE"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.BASE", true),
              })
          .put(
              new Identifier("ROW_HEADER"),
              new Import[] {
                newImport("javax.accessibility.AccessibleRole.ROW_HEADER", true),
                newImport("javax.swing.ScrollPaneConstants.ROW_HEADER", true),
              })
          .put(
              new Identifier("SimpleDoc"),
              new Import[] {
                newImport("javax.print.SimpleDoc", false),
              })
          .put(
              new Identifier("KEY_LAST"),
              new Import[] {
                newImport("java.awt.event.KeyEvent.KEY_LAST", true),
              })
          .put(
              new Identifier("VetoableChangeSupport"),
              new Import[] {
                newImport("java.beans.VetoableChangeSupport", false),
              })
          .put(
              new Identifier("appendTo"),
              new Import[] {
                newImport("java.lang.ProcessBuilder.Redirect.appendTo", true),
              })
          .put(
              new Identifier("EXECUTIVE"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType.EXECUTIVE", true),
                newImport("javax.print.attribute.standard.MediaSizeName.EXECUTIVE", true),
                newImport("javax.print.attribute.standard.MediaSize.Other.EXECUTIVE", true),
              })
          .put(
              new Identifier("ALL_COLUMNS"),
              new Import[] {
                newImport("javax.swing.event.TableModelEvent.ALL_COLUMNS", true),
              })
          .put(
              new Identifier("NumericShaper"),
              new Import[] {
                newImport("java.awt.font.NumericShaper", false),
              })
          .put(
              new Identifier("getLogStream"),
              new Import[] {
                newImport("java.sql.DriverManager.getLogStream", true),
              })
          .put(
              new Identifier("IORHelper"),
              new Import[] {
                newImport("org.omg.IOP.IORHelper", false),
              })
          .put(
              new Identifier("ACCESSIBLE_VISIBLE_DATA_PROPERTY"),
              new Import[] {
                newImport(
                    "javax.accessibility.AccessibleContext.ACCESSIBLE_VISIBLE_DATA_PROPERTY", true),
              })
          .put(
              new Identifier("CHINA"),
              new Import[] {
                newImport("java.util.Locale.CHINA", true),
              })
          .put(
              new Identifier("RCDATA"),
              new Import[] {
                newImport("javax.swing.text.html.parser.DTDConstants.RCDATA", true),
              })
          .put(
              new Identifier("MenuItem"),
              new Import[] {
                newImport("java.awt.MenuItem", false),
              })
          .put(
              new Identifier("VM_ABSTRACT"),
              new Import[] {
                newImport("org.omg.CORBA.VM_ABSTRACT", false),
              })
          .put(
              new Identifier("IMAGE_RESTORED"),
              new Import[] {
                newImport("java.awt.image.VolatileImage.IMAGE_RESTORED", true),
              })
          .put(
              new Identifier("XML_NS_URI"),
              new Import[] {
                newImport("javax.xml.XMLConstants.XML_NS_URI", true),
              })
          .put(
              new Identifier("PASSWORD_FIELD"),
              new Import[] {
                newImport("javax.swing.plaf.synth.Region.PASSWORD_FIELD", true),
              })
          .put(
              new Identifier("FOLIO"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType.FOLIO", true),
                newImport("javax.print.attribute.standard.MediaSizeName.FOLIO", true),
                newImport("javax.print.attribute.standard.MediaSize.Other.FOLIO", true),
              })
          .put(
              new Identifier("RSA_SHA1"),
              new Import[] {
                newImport("javax.xml.crypto.dsig.SignatureMethod.RSA_SHA1", true),
              })
          .put(
              new Identifier("TIMESTAMP_WITH_TIMEZONE"),
              new Import[] {
                newImport("java.sql.Types.TIMESTAMP_WITH_TIMEZONE", true),
              })
          .put(
              new Identifier("getLength"),
              new Import[] {
                newImport("java.lang.reflect.Array.getLength", true),
              })
          .put(
              new Identifier("WINDOW_STATE_EVENT_MASK"),
              new Import[] {
                newImport("java.awt.AWTEvent.WINDOW_STATE_EVENT_MASK", true),
              })
          .put(
              new Identifier("allHtmlFlavor"),
              new Import[] {
                newImport("java.awt.datatransfer.DataFlavor.allHtmlFlavor", true),
              })
          .put(
              new Identifier("SrcOut"),
              new Import[] {
                newImport("java.awt.AlphaComposite.SrcOut", true),
              })
          .put(
              new Identifier("createChildren"),
              new Import[] {
                newImport("javax.swing.JTree.DynamicUtilTreeNode.createChildren", true),
              })
          .put(
              new Identifier("Robot"),
              new Import[] {
                newImport("java.awt.Robot", false),
              })
          .put(
              new Identifier("XMLNS"),
              new Import[] {
                newImport("javax.xml.crypto.dsig.XMLSignature.XMLNS", true),
                newImport("org.xml.sax.helpers.NamespaceSupport.XMLNS", true),
              })
          .put(
              new Identifier("UnknownEncodingHelper"),
              new Import[] {
                newImport("org.omg.IOP.CodecFactoryPackage.UnknownEncodingHelper", false),
              })
          .put(
              new Identifier("MimetypesFileTypeMap"),
              new Import[] {
                newImport("javax.activation.MimetypesFileTypeMap", false),
              })
          .put(
              new Identifier("ModelMBean"),
              new Import[] {
                newImport("javax.management.modelmbean.ModelMBean", false),
              })
          .put(
              new Identifier("LIST_STYLE"),
              new Import[] {
                newImport("javax.swing.text.html.CSS.Attribute.LIST_STYLE", true),
              })
          .put(
              new Identifier("getRegistry"),
              new Import[] {
                newImport("java.rmi.registry.LocateRegistry.getRegistry", true),
              })
          .put(
              new Identifier("SocketHandler"),
              new Import[] {
                newImport("java.util.logging.SocketHandler", false),
              })
          .put(
              new Identifier("ALLOWED_CLASSNAMES_LIST"),
              new Import[] {
                newImport("javax.management.openmbean.OpenType.ALLOWED_CLASSNAMES_LIST", true),
              })
          .put(
              new Identifier("UNSUPPORTED_POLICY_VALUE"),
              new Import[] {
                newImport("org.omg.CORBA.UNSUPPORTED_POLICY_VALUE", false),
              })
          .put(
              new Identifier("SECURITY_PROTOCOL"),
              new Import[] {
                newImport("javax.naming.Context.SECURITY_PROTOCOL", true),
              })
          .put(
              new Identifier("BasicBorders"),
              new Import[] {
                newImport("javax.swing.plaf.basic.BasicBorders", false),
              })
          .put(
              new Identifier("XA_RBDEADLOCK"),
              new Import[] {
                newImport("javax.transaction.xa.XAException.XA_RBDEADLOCK", true),
              })
          .put(
              new Identifier("ActivationSystem"),
              new Import[] {
                newImport("java.rmi.activation.ActivationSystem", false),
              })
          .put(
              new Identifier("CertStoreParameters"),
              new Import[] {
                newImport("java.security.cert.CertStoreParameters", false),
              })
          .put(
              new Identifier("HTTP_PAYMENT_REQUIRED"),
              new Import[] {
                newImport("java.net.HttpURLConnection.HTTP_PAYMENT_REQUIRED", true),
              })
          .put(
              new Identifier("dk_Constant"),
              new Import[] {
                newImport("org.omg.CORBA.DefinitionKind.dk_Constant", true),
              })
          .put(
              new Identifier("IORInterceptorOperations"),
              new Import[] {
                newImport("org.omg.PortableInterceptor.IORInterceptorOperations", false),
              })
          .put(
              new Identifier("TOOL_TIP_TEXT_KEY"),
              new Import[] {
                newImport("javax.swing.JComponent.TOOL_TIP_TEXT_KEY", true),
              })
          .put(
              new Identifier("AccessibleExtendedText"),
              new Import[] {
                newImport("javax.accessibility.AccessibleExtendedText", false),
              })
          .put(
              new Identifier("icSigSpace2CLR"),
              new Import[] {
                newImport("java.awt.color.ICC_Profile.icSigSpace2CLR", true),
              })
          .put(
              new Identifier("icSigRedMatrixColumnTag"),
              new Import[] {
                newImport("java.awt.color.ICC_Profile.icSigRedMatrixColumnTag", true),
              })
          .put(
              new Identifier("parseQName"),
              new Import[] {
                newImport("javax.xml.bind.DatatypeConverter.parseQName", true),
              })
          .put(
              new Identifier("BORDER_LEFT_WIDTH"),
              new Import[] {
                newImport("javax.swing.text.html.CSS.Attribute.BORDER_LEFT_WIDTH", true),
              })
          .put(
              new Identifier("VersionSpecHelper"),
              new Import[] {
                newImport("org.omg.CORBA.VersionSpecHelper", false),
              })
          .put(
              new Identifier("DISABLED_SELECTED_ICON_CHANGED_PROPERTY"),
              new Import[] {
                newImport(
                    "javax.swing.AbstractButton.DISABLED_SELECTED_ICON_CHANGED_PROPERTY", true),
              })
          .put(
              new Identifier("UNICODE_STREAM_PARAM"),
              new Import[] {
                newImport("javax.sql.rowset.BaseRowSet.UNICODE_STREAM_PARAM", true),
              })
          .put(
              new Identifier("WORD"),
              new Import[] {
                newImport("javax.accessibility.AccessibleText.WORD", true),
              })
          .put(
              new Identifier("AFTER_LINE_ENDS"),
              new Import[] {
                newImport("java.awt.BorderLayout.AFTER_LINE_ENDS", true),
              })
          .put(
              new Identifier("LinkOption"),
              new Import[] {
                newImport("java.nio.file.LinkOption", false),
              })
          .put(
              new Identifier("BoldAction"),
              new Import[] {
                newImport("javax.swing.text.StyledEditorKit.BoldAction", false),
              })
          .put(
              new Identifier("CONTROL_SHADOW"),
              new Import[] {
                newImport("java.awt.SystemColor.CONTROL_SHADOW", true),
              })
          .put(
              new Identifier("icHdrAttributes"),
              new Import[] {
                newImport("java.awt.color.ICC_Profile.icHdrAttributes", true),
              })
          .put(
              new Identifier("NOBUTTON"),
              new Import[] {
                newImport("java.awt.event.MouseEvent.NOBUTTON", true),
              })
          .put(
              new Identifier("DelegationPermission"),
              new Import[] {
                newImport("javax.security.auth.kerberos.DelegationPermission", false),
              })
          .put(
              new Identifier("UPPER_LEADING_CORNER"),
              new Import[] {
                newImport("javax.swing.ScrollPaneConstants.UPPER_LEADING_CORNER", true),
              })
          .put(
              new Identifier("W3CEndpointReferenceBuilder"),
              new Import[] {
                newImport("javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder", false),
              })
          .put(
              new Identifier("CUNEIFORM"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.CUNEIFORM", true),
              })
          .put(
              new Identifier("FULLWIDTH_LATIN"),
              new Import[] {
                newImport("java.awt.im.InputSubset.FULLWIDTH_LATIN", true),
              })
          .put(
              new Identifier("createLineBorder"),
              new Import[] {
                newImport("javax.swing.BorderFactory.createLineBorder", true),
              })
          .put(
              new Identifier("PROVIDER_URL"),
              new Import[] {
                newImport("javax.naming.Context.PROVIDER_URL", true),
              })
          .put(
              new Identifier("KAKU_20"),
              new Import[] {
                newImport("javax.print.attribute.standard.MediaSize.JIS.KAKU_20", true),
              })
          .put(
              new Identifier("Package"),
              new Import[] {
                newImport("java.lang.Package", false),
              })
          .put(
              new Identifier("SNI_HOST_NAME"),
              new Import[] {
                newImport("javax.net.ssl.StandardConstants.SNI_HOST_NAME", true),
              })
          .put(
              new Identifier("SINGLE_DOCUMENT_NEW_SHEET"),
              new Import[] {
                newImport(
                    "javax.print.attribute.standard.MultipleDocumentHandling.SINGLE_DOCUMENT_NEW_SHEET",
                    true),
              })
          .put(
              new Identifier("_PARAM_OUT"),
              new Import[] {
                newImport("org.omg.CORBA.ParameterMode._PARAM_OUT", true),
              })
          .put(
              new Identifier("ConnectionEventListener"),
              new Import[] {
                newImport("javax.sql.ConnectionEventListener", false),
              })
          .put(
              new Identifier("WEIGHT_ULTRABOLD"),
              new Import[] {
                newImport("java.awt.font.TextAttribute.WEIGHT_ULTRABOLD", true),
              })
          .put(
              new Identifier("Base64"),
              new Import[] {
                newImport("java.util.Base64", false),
              })
          .put(
              new Identifier("TAG_MMSD"),
              new Import[] {
                newImport("java.awt.font.OpenType.TAG_MMSD", true),
              })
          .put(
              new Identifier("range"),
              new Import[] {
                newImport("java.util.EnumSet.range", true),
                newImport("java.util.stream.IntStream.range", true),
                newImport("java.util.stream.LongStream.range", true),
              })
          .put(
              new Identifier("IllegalBlockSizeException"),
              new Import[] {
                newImport("javax.crypto.IllegalBlockSizeException", false),
              })
          .put(
              new Identifier("TreeSelectionListener"),
              new Import[] {
                newImport("javax.swing.event.TreeSelectionListener", false),
              })
          .put(
              new Identifier("_dk_Typedef"),
              new Import[] {
                newImport("org.omg.CORBA.DefinitionKind._dk_Typedef", true),
              })
          .put(
              new Identifier("ModelMBeanInfo"),
              new Import[] {
                newImport("javax.management.modelmbean.ModelMBeanInfo", false),
              })
          .put(
              new Identifier("AttributeException"),
              new Import[] {
                newImport("javax.print.AttributeException", false),
              })
          .put(
              new Identifier("YI_SYLLABLES"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.YI_SYLLABLES", true),
              })
          .put(
              new Identifier("getBidiLevel"),
              new Import[] {
                newImport("javax.swing.text.StyleConstants.getBidiLevel", true),
              })
          .put(
              new Identifier("OUTBOUND_MESSAGE_ATTACHMENTS"),
              new Import[] {
                newImport("javax.xml.ws.handler.MessageContext.OUTBOUND_MESSAGE_ATTACHMENTS", true),
              })
          .put(
              new Identifier("ITALIAN"),
              new Import[] {
                newImport("java.util.Locale.ITALIAN", true),
              })
          .put(
              new Identifier("getWindowAncestor"),
              new Import[] {
                newImport("javax.swing.SwingUtilities.getWindowAncestor", true),
              })
          .put(
              new Identifier("NotFoundReason"),
              new Import[] {
                newImport("org.omg.CosNaming.NamingContextPackage.NotFoundReason", false),
              })
          .put(
              new Identifier("TOOL_BAR_DRAG_WINDOW"),
              new Import[] {
                newImport("javax.swing.plaf.synth.Region.TOOL_BAR_DRAG_WINDOW", true),
              })
          .put(
              new Identifier("_not_object"),
              new Import[] {
                newImport(
                    "org.omg.CosNaming.NamingContextPackage.NotFoundReason._not_object", true),
              })
          .put(
              new Identifier("SUNDANESE_SUPPLEMENT"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.SUNDANESE_SUPPLEMENT", true),
              })
          .put(
              new Identifier("MIN_EXPONENT"),
              new Import[] {
                newImport("java.lang.Double.MIN_EXPONENT", true),
                newImport("java.lang.Float.MIN_EXPONENT", true),
              })
          .put(
              new Identifier("getPropertyChangeListeners"),
              new Import[] {
                newImport("javax.swing.UIManager.getPropertyChangeListeners", true),
              })
          .put(
              new Identifier("DragGestureListener"),
              new Import[] {
                newImport("java.awt.dnd.DragGestureListener", false),
              })
          .put(
              new Identifier("LAST_LINE_START"),
              new Import[] {
                newImport("java.awt.GridBagConstraints.LAST_LINE_START", true),
              })
          .put(
              new Identifier("TABBED_PANE_CONTENT"),
              new Import[] {
                newImport("javax.swing.plaf.synth.Region.TABBED_PANE_CONTENT", true),
              })
          .put(
              new Identifier("filter"),
              new Import[] {
                newImport("java.util.Locale.filter", true),
              })
          .put(
              new Identifier("RoleInfoNotFoundException"),
              new Import[] {
                newImport("javax.management.relation.RoleInfoNotFoundException", false),
              })
          .put(
              new Identifier("SINGLEFRAME"),
              new Import[] {
                newImport("java.awt.image.ImageConsumer.SINGLEFRAME", true),
              })
          .put(
              new Identifier("JOB_COMPLETED_WITH_WARNINGS"),
              new Import[] {
                newImport(
                    "javax.print.attribute.standard.JobStateReason.JOB_COMPLETED_WITH_WARNINGS",
                    true),
              })
          .put(
              new Identifier("registerEditor"),
              new Import[] {
                newImport("java.beans.PropertyEditorManager.registerEditor", true),
              })
          .put(
              new Identifier("DocumentView"),
              new Import[] {
                newImport("org.w3c.dom.views.DocumentView", false),
              })
          .put(
              new Identifier("STOPPED_PARTLY"),
              new Import[] {
                newImport("javax.print.attribute.standard.PrinterStateReason.STOPPED_PARTLY", true),
              })
          .put(
              new Identifier("getAvailableCalendarTypes"),
              new Import[] {
                newImport("java.util.Calendar.getAvailableCalendarTypes", true),
              })
          .put(
              new Identifier("SUPPLEMENTAL_ARROWS_A"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.SUPPLEMENTAL_ARROWS_A", true),
              })
          .put(
              new Identifier("MODE_EXPLICIT"),
              new Import[] {
                newImport("javax.imageio.ImageWriteParam.MODE_EXPLICIT", true),
              })
          .put(
              new Identifier("UnknownEntityException"),
              new Import[] {
                newImport("javax.lang.model.UnknownEntityException", false),
              })
          .put(
              new Identifier("_BindingIteratorStub"),
              new Import[] {
                newImport("org.omg.CosNaming._BindingIteratorStub", false),
              })
          .put(
              new Identifier("CJK_COMPATIBILITY_IDEOGRAPHS"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS", true),
              })
          .put(
              new Identifier("SENTENCE"),
              new Import[] {
                newImport("javax.accessibility.AccessibleText.SENTENCE", true),
              })
          .put(
              new Identifier("ManageReferralControl"),
              new Import[] {
                newImport("javax.naming.ldap.ManageReferralControl", false),
              })
          .put(
              new Identifier("HTML"),
              new Import[] {
                newImport("javax.swing.text.html.HTML", false),
                newImport("javax.swing.text.html.HTML.Tag.HTML", true),
              })
          .put(
              new Identifier("SUPPLEMENTAL_ARROWS_B"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.SUPPLEMENTAL_ARROWS_B", true),
              })
          .put(
              new Identifier("TargetDataLine"),
              new Import[] {
                newImport("javax.sound.sampled.TargetDataLine", false),
              })
          .put(
              new Identifier("SPECIFICATION_VERSION"),
              new Import[] {
                newImport("java.util.jar.Attributes.Name.SPECIFICATION_VERSION", true),
              })
          .put(
              new Identifier("checkedNavigableMap"),
              new Import[] {
                newImport("java.util.Collections.checkedNavigableMap", true),
              })
          .put(
              new Identifier("SysexMessage"),
              new Import[] {
                newImport("javax.sound.midi.SysexMessage", false),
              })
          .put(
              new Identifier("VK_CONTEXT_MENU"),
              new Import[] {
                newImport("java.awt.event.KeyEvent.VK_CONTEXT_MENU", true),
              })
          .put(
              new Identifier("getDefaultAlgorithm"),
              new Import[] {
                newImport("javax.net.ssl.KeyManagerFactory.getDefaultAlgorithm", true),
                newImport("javax.net.ssl.TrustManagerFactory.getDefaultAlgorithm", true),
              })
          .put(
              new Identifier("BORDER_LEFT_COLOR"),
              new Import[] {
                newImport("javax.swing.text.html.CSS.Attribute.BORDER_LEFT_COLOR", true),
              })
          .put(
              new Identifier("Member"),
              new Import[] {
                newImport("java.lang.reflect.Member", false),
              })
          .put(
              new Identifier("_dk_ValueMember"),
              new Import[] {
                newImport("org.omg.CORBA.DefinitionKind._dk_ValueMember", true),
              })
          .put(
              new Identifier("DocumentName"),
              new Import[] {
                newImport("javax.print.attribute.standard.DocumentName", false),
              })
          .put(
              new Identifier("tan"),
              new Import[] {
                newImport("java.lang.Math.tan", true), newImport("java.lang.StrictMath.tan", true),
              })
          .put(
              new Identifier("DISABLED_ICON_CHANGED_PROPERTY"),
              new Import[] {
                newImport("javax.swing.AbstractButton.DISABLED_ICON_CHANGED_PROPERTY", true),
              })
          .put(
              new Identifier("NULL"),
              new Import[] {
                newImport("java.sql.Types.NULL", true),
              })
          .put(
              new Identifier("setLoginTimeout"),
              new Import[] {
                newImport("java.sql.DriverManager.setLoginTimeout", true),
              })
          .put(
              new Identifier("SEPARATOR"),
              new Import[] {
                newImport("javax.accessibility.AccessibleRole.SEPARATOR", true),
                newImport("javax.swing.plaf.synth.Region.SEPARATOR", true),
              })
          .put(
              new Identifier("ServantNotActiveHelper"),
              new Import[] {
                newImport("org.omg.PortableServer.POAPackage.ServantNotActiveHelper", false),
              })
          .put(
              new Identifier("IORInfo"),
              new Import[] {
                newImport("org.omg.PortableInterceptor.IORInfo", false),
              })
          .put(
              new Identifier("showInternalOptionDialog"),
              new Import[] {
                newImport("javax.swing.JOptionPane.showInternalOptionDialog", true),
              })
          .put(
              new Identifier("PI_DISABLE_OUTPUT_ESCAPING"),
              new Import[] {
                newImport("javax.xml.transform.Result.PI_DISABLE_OUTPUT_ESCAPING", true),
              })
          .put(
              new Identifier("ACTION_COPY"),
              new Import[] {
                newImport("java.awt.dnd.DnDConstants.ACTION_COPY", true),
              })
          .put(
              new Identifier("getPrimaryControlInfo"),
              new Import[] {
                newImport("javax.swing.plaf.metal.MetalLookAndFeel.getPrimaryControlInfo", true),
              })
          .put(
              new Identifier("getAlgorithmProperty"),
              new Import[] {
                newImport("java.security.Security.getAlgorithmProperty", true),
              })
          .put(
              new Identifier("registerEditorKitForContentType"),
              new Import[] {
                newImport("javax.swing.JEditorPane.registerEditorKitForContentType", true),
              })
          .put(
              new Identifier("JAXBIntrospector"),
              new Import[] {
                newImport("javax.xml.bind.JAXBIntrospector", false),
              })
          .put(
              new Identifier("MENU_BAR"),
              new Import[] {
                newImport("javax.accessibility.AccessibleRole.MENU_BAR", true),
                newImport("javax.swing.plaf.synth.Region.MENU_BAR", true),
              })
          .put(
              new Identifier("ValueRange"),
              new Import[] {
                newImport("java.time.temporal.ValueRange", false),
              })
          .put(
              new Identifier("TOBOTTOM_TOLEFT"),
              new Import[] {
                newImport(
                    "javax.print.attribute.standard.PresentationDirection.TOBOTTOM_TOLEFT", true),
              })
          .put(
              new Identifier("InputMethodContext"),
              new Import[] {
                newImport("java.awt.im.spi.InputMethodContext", false),
              })
          .put(
              new Identifier("_Remote_Stub"),
              new Import[] {
                newImport("org.omg.stub.java.rmi._Remote_Stub", false),
              })
          .put(
              new Identifier("CompletionStatusHelper"),
              new Import[] {
                newImport("org.omg.CORBA.CompletionStatusHelper", false),
              })
          .put(
              new Identifier("parseDate"),
              new Import[] {
                newImport("javax.xml.bind.DatatypeConverter.parseDate", true),
              })
          .put(
              new Identifier("WINDOW_ACTIVATED"),
              new Import[] {
                newImport("java.awt.event.WindowEvent.WINDOW_ACTIVATED", true),
              })
          .put(
              new Identifier("VM_TRUNCATABLE"),
              new Import[] {
                newImport("org.omg.CORBA.VM_TRUNCATABLE", false),
              })
          .put(
              new Identifier("DRAG_LAYER"),
              new Import[] {
                newImport("javax.swing.JLayeredPane.DRAG_LAYER", true),
              })
          .put(
              new Identifier("MBeanException"),
              new Import[] {
                newImport("javax.management.MBeanException", false),
              })
          .put(
              new Identifier("WIND_NON_ZERO"),
              new Import[] {
                newImport("java.awt.geom.Path2D.WIND_NON_ZERO", true),
                newImport("java.awt.geom.PathIterator.WIND_NON_ZERO", true),
              })
          .put(
              new Identifier("ALLOW_UNASSIGNED"),
              new Import[] {
                newImport("java.net.IDN.ALLOW_UNASSIGNED", true),
              })
          .put(
              new Identifier("Chromaticity"),
              new Import[] {
                newImport("javax.print.attribute.standard.Chromaticity", false),
              })
          .put(
              new Identifier("UnsolicitedNotificationListener"),
              new Import[] {
                newImport("javax.naming.ldap.UnsolicitedNotificationListener", false),
              })
          .put(
              new Identifier("verifyCategoryForValue"),
              new Import[] {
                newImport(
                    "javax.print.attribute.AttributeSetUtilities.verifyCategoryForValue", true),
              })
          .put(
              new Identifier("getInternalFrameCloseIcon"),
              new Import[] {
                newImport(
                    "javax.swing.plaf.metal.MetalIconFactory.getInternalFrameCloseIcon", true),
              })
          .put(
              new Identifier("JInternalFrame"),
              new Import[] {
                newImport("javax.swing.JInternalFrame", false),
              })
          .put(
              new Identifier("ofTotalSeconds"),
              new Import[] {
                newImport("java.time.ZoneOffset.ofTotalSeconds", true),
              })
          .put(
              new Identifier("AbstractFormatterFactory"),
              new Import[] {
                newImport("javax.swing.JFormattedTextField.AbstractFormatterFactory", false),
              })
          .put(
              new Identifier("ElementChange"),
              new Import[] {
                newImport("javax.swing.event.DocumentEvent.ElementChange", false),
              })
          .put(
              new Identifier("FormView"),
              new Import[] {
                newImport("javax.swing.text.html.FormView", false),
              })
          .put(
              new Identifier("Detail"),
              new Import[] {
                newImport("javax.xml.soap.Detail", false),
              })
          .put(
              new Identifier("FileWriter"),
              new Import[] {
                newImport("java.io.FileWriter", false),
              })
          .put(
              new Identifier("MutableCallSite"),
              new Import[] {
                newImport("java.lang.invoke.MutableCallSite", false),
              })
          .put(
              new Identifier("ANY"),
              new Import[] {
                newImport("javax.swing.text.html.parser.DTDConstants.ANY", true),
              })
          .put(
              new Identifier("PropertyChangeListenerProxy"),
              new Import[] {
                newImport("java.beans.PropertyChangeListenerProxy", false),
              })
          .put(
              new Identifier("ANCIENT_GREEK_NUMBERS"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.ANCIENT_GREEK_NUMBERS", true),
              })
          .put(
              new Identifier("VEDIC_EXTENSIONS"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.VEDIC_EXTENSIONS", true),
              })
          .put(
              new Identifier("classModifiers"),
              new Import[] {
                newImport("java.lang.reflect.Modifier.classModifiers", true),
              })
          .put(
              new Identifier("CONTROL_LT_HIGHLIGHT"),
              new Import[] {
                newImport("java.awt.SystemColor.CONTROL_LT_HIGHLIGHT", true),
              })
          .put(
              new Identifier("KAKU_A4"),
              new Import[] {
                newImport("javax.print.attribute.standard.MediaSize.JIS.KAKU_A4", true),
              })
          .put(
              new Identifier("ObjLongConsumer"),
              new Import[] {
                newImport("java.util.function.ObjLongConsumer", false),
              })
          .put(
              new Identifier("ResourceBundleControlProvider"),
              new Import[] {
                newImport("java.util.spi.ResourceBundleControlProvider", false),
              })
          .put(
              new Identifier("POLICY_NOPLAINTEXT"),
              new Import[] {
                newImport("javax.security.sasl.Sasl.POLICY_NOPLAINTEXT", true),
              })
          .put(
              new Identifier("B10"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType.B10", true),
                newImport("javax.print.attribute.standard.MediaSize.ISO.B10", true),
                newImport("javax.print.attribute.standard.MediaSize.JIS.B10", true),
              })
          .put(
              new Identifier("getControlInfo"),
              new Import[] {
                newImport("javax.swing.plaf.metal.MetalLookAndFeel.getControlInfo", true),
              })
          .put(
              new Identifier("InputStreamReader"),
              new Import[] {
                newImport("java.io.InputStreamReader", false),
              })
          .put(
              new Identifier("DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING"),
              new Import[] {
                newImport("java.lang.Character.DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING", true),
              })
          .put(
              new Identifier("setForeground"),
              new Import[] {
                newImport("javax.swing.text.StyleConstants.setForeground", true),
              })
          .put(
              new Identifier("ENCODING_CDR_ENCAPS"),
              new Import[] {
                newImport("org.omg.IOP.ENCODING_CDR_ENCAPS", false),
              })
          .put(
              new Identifier("JobHoldUntil"),
              new Import[] {
                newImport("javax.print.attribute.standard.JobHoldUntil", false),
              })
          .put(
              new Identifier("TRACK"),
              new Import[] {
                newImport("java.awt.event.AdjustmentEvent.TRACK", true),
              })
          .put(
              new Identifier("ABORTED_BY_SYSTEM"),
              new Import[] {
                newImport("javax.print.attribute.standard.JobStateReason.ABORTED_BY_SYSTEM", true),
              })
          .put(
              new Identifier("SERIF"),
              new Import[] {
                newImport("java.awt.Font.SERIF", true),
              })
          .put(
              new Identifier("MAX_SCROLL"),
              new Import[] {
                newImport("javax.swing.plaf.basic.BasicSliderUI.MAX_SCROLL", true),
              })
          .put(
              new Identifier("Callback"),
              new Import[] {
                newImport("javax.security.auth.callback.Callback", false),
              })
          .put(
              new Identifier("CLEAR"),
              new Import[] {
                newImport("java.awt.AlphaComposite.CLEAR", true),
                newImport("javax.swing.text.html.CSS.Attribute.CLEAR", true),
                newImport("javax.swing.text.html.HTML.Attribute.CLEAR", true),
              })
          .build();
}
