// Code generated by GenerateStdlib.java. DO NOT EDIT.
package com.nikodoko.javaimports.stdlib.internal.api.v8;

import static com.nikodoko.javaimports.stdlib.internal.Stdlib.newImport;

import com.google.common.collect.ImmutableMap;
import com.nikodoko.javaimports.common.Identifier;
import com.nikodoko.javaimports.common.Import;
import java.util.Map;

public class Java8StdlibChunk4 {
  static final Map<Identifier, Import[]> CLASSES =
      new ImmutableMap.Builder<Identifier, Import[]>()
          .put(
              new Identifier("icHdrIlluminant"),
              new Import[] {
                newImport("java.awt.color.ICC_Profile.icHdrIlluminant", true),
              })
          .put(
              new Identifier("NO_PROXY"),
              new Import[] {
                newImport("java.net.Proxy.NO_PROXY", true),
              })
          .put(
              new Identifier("CallbackHandler"),
              new Import[] {
                newImport("javax.security.auth.callback.CallbackHandler", false),
              })
          .put(
              new Identifier("FRAME_ICON_PROPERTY"),
              new Import[] {
                newImport("javax.swing.JInternalFrame.FRAME_ICON_PROPERTY", true),
              })
          .put(
              new Identifier("OUT_TOP"),
              new Import[] {
                newImport("java.awt.geom.Rectangle2D.OUT_TOP", true),
              })
          .put(
              new Identifier("MinguoEra"),
              new Import[] {
                newImport("java.time.chrono.MinguoEra", false),
              })
          .put(
              new Identifier("BC"),
              new Import[] {
                newImport("java.util.GregorianCalendar.BC", true),
              })
          .put(
              new Identifier("SOUTHWEST"),
              new Import[] {
                newImport("java.awt.GridBagConstraints.SOUTHWEST", true),
              })
          .put(
              new Identifier("_INACTIVE"),
              new Import[] {
                newImport("org.omg.PortableServer.POAManagerPackage.State._INACTIVE", true),
              })
          .put(
              new Identifier("decapitalize"),
              new Import[] {
                newImport("java.beans.Introspector.decapitalize", true),
              })
          .put(
              new Identifier("createLoweredSoftBevelBorder"),
              new Import[] {
                newImport("javax.swing.BorderFactory.createLoweredSoftBevelBorder", true),
              })
          .put(
              new Identifier("C0"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType.C0", true),
              })
          .put(
              new Identifier("HALFWIDTH_KATAKANA"),
              new Import[] {
                newImport("java.awt.im.InputSubset.HALFWIDTH_KATAKANA", true),
              })
          .put(
              new Identifier("IS_SELECTED_PROPERTY"),
              new Import[] {
                newImport("javax.swing.JInternalFrame.IS_SELECTED_PROPERTY", true),
              })
          .put(
              new Identifier("C1"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType.C1", true),
              })
          .put(
              new Identifier("PREVIOUS"),
              new Import[] {
                newImport("javax.swing.SwingConstants.PREVIOUS", true),
              })
          .put(
              new Identifier("C2"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType.C2", true),
              })
          .put(
              new Identifier("Collator"),
              new Import[] {
                newImport("java.text.Collator", false),
              })
          .put(
              new Identifier("C3"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType.C3", true),
                newImport("javax.print.attribute.standard.MediaSize.ISO.C3", true),
              })
          .put(
              new Identifier("BR"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.BR", true),
              })
          .put(
              new Identifier("C4"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType.C4", true),
                newImport("javax.print.attribute.standard.MediaSize.ISO.C4", true),
              })
          .put(
              new Identifier("C5"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType.C5", true),
                newImport("javax.print.attribute.standard.MediaSize.ISO.C5", true),
              })
          .put(
              new Identifier("C6"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType.C6", true),
                newImport("javax.print.attribute.standard.MediaSize.ISO.C6", true),
              })
          .put(
              new Identifier("createHTMLView"),
              new Import[] {
                newImport("javax.swing.plaf.basic.BasicHTML.createHTMLView", true),
              })
          .put(
              new Identifier("C7"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType.C7", true),
              })
          .put(
              new Identifier("C8"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType.C8", true),
              })
          .put(
              new Identifier("INVALID_CHARACTER_ERR"),
              new Import[] {
                newImport("org.w3c.dom.DOMException.INVALID_CHARACTER_ERR", true),
              })
          .put(
              new Identifier("C9"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType.C9", true),
              })
          .put(
              new Identifier("NA_10x13_ENVELOPE"),
              new Import[] {
                newImport("javax.print.attribute.standard.MediaSize.NA.NA_10x13_ENVELOPE", true),
              })
          .put(
              new Identifier("SHOWA"),
              new Import[] {
                newImport("java.time.chrono.JapaneseEra.SHOWA", true),
              })
          .put(
              new Identifier("PCM_UNSIGNED"),
              new Import[] {
                newImport("javax.sound.sampled.AudioFormat.Encoding.PCM_UNSIGNED", true),
              })
          .put(
              new Identifier("CONVERTED_TEXT"),
              new Import[] {
                newImport("java.awt.im.InputMethodHighlight.CONVERTED_TEXT", true),
              })
          .put(
              new Identifier("ControlFactory"),
              new Import[] {
                newImport("javax.naming.ldap.ControlFactory", false),
              })
          .put(
              new Identifier("CHARACTER"),
              new Import[] {
                newImport("javax.accessibility.AccessibleText.CHARACTER", true),
                newImport("javax.management.openmbean.SimpleType.CHARACTER", true),
              })
          .put(
              new Identifier("CertPathBuilder"),
              new Import[] {
                newImport("java.security.cert.CertPathBuilder", false),
              })
          .put(
              new Identifier("ROWSET_SYNC_PROVIDER"),
              new Import[] {
                newImport("javax.sql.rowset.spi.SyncFactory.ROWSET_SYNC_PROVIDER", true),
              })
          .put(
              new Identifier("ARG_IN"),
              new Import[] {
                newImport("org.omg.CORBA.ARG_IN", false),
              })
          .put(
              new Identifier("AbstractSet"),
              new Import[] {
                newImport("java.util.AbstractSet", false),
              })
          .put(
              new Identifier("DIR"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Attribute.DIR", true),
                newImport("javax.swing.text.html.HTML.Tag.DIR", true),
              })
          .put(
              new Identifier("STANDARD_OUTPUT_TYPE"),
              new Import[] {
                newImport("javax.imageio.spi.ImageWriterSpi.STANDARD_OUTPUT_TYPE", true),
              })
          .put(
              new Identifier("WebEndpoint"),
              new Import[] {
                newImport("javax.xml.ws.WebEndpoint", false),
              })
          .put(
              new Identifier("DIV"),
              new Import[] {
                newImport("javax.management.Query.DIV", true),
                newImport("javax.swing.text.html.HTML.Tag.DIV", true),
              })
          .put(
              new Identifier("Tie"),
              new Import[] {
                newImport("javax.rmi.CORBA.Tie", false),
              })
          .put(
              new Identifier("MultipleDocumentHandlingType"),
              new Import[] {
                newImport("java.awt.JobAttributes.MultipleDocumentHandlingType", false),
              })
          .put(
              new Identifier("DynValueHelper"),
              new Import[] {
                newImport("org.omg.DynamicAny.DynValueHelper", false),
              })
          .put(
              new Identifier("WINDOW_FIRST"),
              new Import[] {
                newImport("java.awt.event.WindowEvent.WINDOW_FIRST", true),
              })
          .put(
              new Identifier("KeyListener"),
              new Import[] {
                newImport("java.awt.event.KeyListener", false),
              })
          .put(
              new Identifier("_BindingIteratorImplBase"),
              new Import[] {
                newImport("org.omg.CosNaming._BindingIteratorImplBase", false),
              })
          .put(
              new Identifier("averagingInt"),
              new Import[] {
                newImport("java.util.stream.Collectors.averagingInt", true),
              })
          .put(
              new Identifier("VoiceStatus"),
              new Import[] {
                newImport("javax.sound.midi.VoiceStatus", false),
              })
          .put(
              new Identifier("CANCEL_SELECTION"),
              new Import[] {
                newImport("javax.swing.JFileChooser.CANCEL_SELECTION", true),
              })
          .put(
              new Identifier("DD"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.DD", true),
              })
          .put(
              new Identifier("ComponentListener"),
              new Import[] {
                newImport("java.awt.event.ComponentListener", false),
              })
          .put(
              new Identifier("VALUE_TEXT_ANTIALIAS_LCD_VRGB"),
              new Import[] {
                newImport("java.awt.RenderingHints.VALUE_TEXT_ANTIALIAS_LCD_VRGB", true),
              })
          .put(
              new Identifier("SAAJMetaFactory"),
              new Import[] {
                newImport("javax.xml.soap.SAAJMetaFactory", false),
              })
          .put(
              new Identifier("TextArea"),
              new Import[] {
                newImport("java.awt.TextArea", false),
              })
          .put(
              new Identifier("DL"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.DL", true),
              })
          .put(
              new Identifier("PBEKey"),
              new Import[] {
                newImport("javax.crypto.interfaces.PBEKey", false),
              })
          .put(
              new Identifier("NumberUp"),
              new Import[] {
                newImport("javax.print.attribute.standard.NumberUp", false),
              })
          .put(
              new Identifier("DT"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.DT", true),
              })
          .put(
              new Identifier("IRObject"),
              new Import[] {
                newImport("org.omg.CORBA.IRObject", false),
              })
          .put(
              new Identifier("AREA"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.AREA", true),
              })
          .put(
              new Identifier("tableIndexStatistic"),
              new Import[] {
                newImport("java.sql.DatabaseMetaData.tableIndexStatistic", true),
              })
          .put(
              new Identifier("NameHelper"),
              new Import[] {
                newImport("org.omg.CosNaming.NameHelper", false),
              })
          .put(
              new Identifier("DATA_TRANSFER_COMPLETE"),
              new Import[] {
                newImport("javax.print.event.PrintJobEvent.DATA_TRANSFER_COMPLETE", true),
              })
          .put(
              new Identifier("getLeftIndent"),
              new Import[] {
                newImport("javax.swing.text.StyleConstants.getLeftIndent", true),
              })
          .put(
              new Identifier("printQName"),
              new Import[] {
                newImport("javax.xml.bind.DatatypeConverter.printQName", true),
              })
          .put(
              new Identifier("ProgressMonitorInputStream"),
              new Import[] {
                newImport("javax.swing.ProgressMonitorInputStream", false),
              })
          .put(
              new Identifier("DefaultHandler2"),
              new Import[] {
                newImport("org.xml.sax.ext.DefaultHandler2", false),
              })
          .put(
              new Identifier("COVER_OPEN"),
              new Import[] {
                newImport("javax.print.attribute.standard.PrinterStateReason.COVER_OPEN", true),
              })
          .put(
              new Identifier("PKIXBuilderParameters"),
              new Import[] {
                newImport("java.security.cert.PKIXBuilderParameters", false),
              })
          .put(
              new Identifier("NT_HOSTBASED_SERVICE"),
              new Import[] {
                newImport("org.ietf.jgss.GSSName.NT_HOSTBASED_SERVICE", true),
              })
          .put(
              new Identifier("CannotRedoException"),
              new Import[] {
                newImport("javax.swing.undo.CannotRedoException", false),
              })
          .put(
              new Identifier("STAPLE_TOP_RIGHT"),
              new Import[] {
                newImport("javax.print.attribute.standard.Finishings.STAPLE_TOP_RIGHT", true),
              })
          .put(
              new Identifier("EM"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.EM", true),
              })
          .put(
              new Identifier("F0"),
              new Import[] {
                newImport("java.security.spec.RSAKeyGenParameterSpec.F0", true),
              })
          .put(
              new Identifier("F1"),
              new Import[] {
                newImport("java.awt.Event.F1", true),
              })
          .put(
              new Identifier("F2"),
              new Import[] {
                newImport("java.awt.Event.F2", true),
              })
          .put(
              new Identifier("EQ"),
              new Import[] {
                newImport("javax.management.Query.EQ", true),
              })
          .put(
              new Identifier("F3"),
              new Import[] {
                newImport("java.awt.Event.F3", true),
              })
          .put(
              new Identifier("F4"),
              new Import[] {
                newImport("java.awt.Event.F4", true),
                newImport("java.security.spec.RSAKeyGenParameterSpec.F4", true),
              })
          .put(
              new Identifier("F5"),
              new Import[] {
                newImport("java.awt.Event.F5", true),
              })
          .put(
              new Identifier("F6"),
              new Import[] {
                newImport("java.awt.Event.F6", true),
              })
          .put(
              new Identifier("KRB_NT_SRV_HST"),
              new Import[] {
                newImport("javax.security.auth.kerberos.KerberosPrincipal.KRB_NT_SRV_HST", true),
              })
          .put(
              new Identifier("F7"),
              new Import[] {
                newImport("java.awt.Event.F7", true),
              })
          .put(
              new Identifier("latestSupported"),
              new Import[] {
                newImport("javax.lang.model.SourceVersion.latestSupported", true),
              })
          .put(
              new Identifier("F8"),
              new Import[] {
                newImport("java.awt.Event.F8", true),
              })
          .put(
              new Identifier("ZipInputStream"),
              new Import[] {
                newImport("java.util.zip.ZipInputStream", false),
              })
          .put(
              new Identifier("dk_Attribute"),
              new Import[] {
                newImport("org.omg.CORBA.DefinitionKind.dk_Attribute", true),
              })
          .put(
              new Identifier("F9"),
              new Import[] {
                newImport("java.awt.Event.F9", true),
              })
          .put(
              new Identifier("ParameterBlock"),
              new Import[] {
                newImport("java.awt.image.renderable.ParameterBlock", false),
              })
          .put(
              new Identifier("icHdrDate"),
              new Import[] {
                newImport("java.awt.color.ICC_Profile.icHdrDate", true),
              })
          .put(
              new Identifier("SCROLL_END"),
              new Import[] {
                newImport("java.awt.Event.SCROLL_END", true),
              })
          .put(
              new Identifier("DECLARED"),
              new Import[] {
                newImport("java.lang.reflect.Member.DECLARED", true),
              })
          .put(
              new Identifier("SIMPLE_SCROLL_MODE"),
              new Import[] {
                newImport("javax.swing.JViewport.SIMPLE_SCROLL_MODE", true),
              })
          .put(
              new Identifier("SizeRequirements"),
              new Import[] {
                newImport("javax.swing.SizeRequirements", false),
              })
          .put(
              new Identifier("tk_float"),
              new Import[] {
                newImport("org.omg.CORBA.TCKind.tk_float", true),
              })
          .put(
              new Identifier("ACTION_REPLACE"),
              new Import[] {
                newImport("org.w3c.dom.ls.LSParser.ACTION_REPLACE", true),
              })
          .put(
              new Identifier("SEPARATE_DOCUMENTS_UNCOLLATED_COPIES"),
              new Import[] {
                newImport(
                    "java.awt.JobAttributes.MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES",
                    true),
                newImport(
                    "javax.print.attribute.standard.MultipleDocumentHandling.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES",
                    true),
              })
          .put(
              new Identifier("icSigOutputResponseTag"),
              new Import[] {
                newImport("java.awt.color.ICC_Profile.icSigOutputResponseTag", true),
              })
          .put(
              new Identifier("RuntimeMBeanException"),
              new Import[] {
                newImport("javax.management.RuntimeMBeanException", false),
              })
          .put(
              new Identifier("TableColumnModelListener"),
              new Import[] {
                newImport("javax.swing.event.TableColumnModelListener", false),
              })
          .put(
              new Identifier("TYPE_CMY"),
              new Import[] {
                newImport("java.awt.color.ColorSpace.TYPE_CMY", true),
              })
          .put(
              new Identifier("getDouble"),
              new Import[] {
                newImport("java.lang.reflect.Array.getDouble", true),
              })
          .put(
              new Identifier("LinearGradientPaint"),
              new Import[] {
                newImport("java.awt.LinearGradientPaint", false),
              })
          .put(
              new Identifier("NumberUpSupported"),
              new Import[] {
                newImport("javax.print.attribute.standard.NumberUpSupported", false),
              })
          .put(
              new Identifier("FUSER_UNDER_TEMP"),
              new Import[] {
                newImport(
                    "javax.print.attribute.standard.PrinterStateReason.FUSER_UNDER_TEMP", true),
              })
          .put(
              new Identifier("PopupMenuEvent"),
              new Import[] {
                newImport("javax.swing.event.PopupMenuEvent", false),
              })
          .put(
              new Identifier("PanelUI"),
              new Import[] {
                newImport("javax.swing.plaf.PanelUI", false),
              })
          .put(
              new Identifier("Signer"),
              new Import[] {
                newImport("java.security.Signer", false),
              })
          .put(
              new Identifier("getDragThreshold"),
              new Import[] {
                newImport("java.awt.dnd.DragSource.getDragThreshold", true),
              })
          .put(
              new Identifier("IllegalClassFormatException"),
              new Import[] {
                newImport("java.lang.instrument.IllegalClassFormatException", false),
              })
          .put(
              new Identifier("BRAILLE_PATTERNS"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.BRAILLE_PATTERNS", true),
              })
          .put(
              new Identifier("TREE_CELL"),
              new Import[] {
                newImport("javax.swing.plaf.synth.Region.TREE_CELL", true),
              })
          .put(
              new Identifier("pageDownAction"),
              new Import[] {
                newImport("javax.swing.text.DefaultEditorKit.pageDownAction", true),
              })
          .put(
              new Identifier("WINDOW_LOST_FOCUS"),
              new Import[] {
                newImport("java.awt.event.WindowEvent.WINDOW_LOST_FOCUS", true),
              })
          .put(
              new Identifier("ViewportLayout"),
              new Import[] {
                newImport("javax.swing.ViewportLayout", false),
              })
          .put(
              new Identifier("HIGH_PRIVATE_USE_SURROGATES"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.HIGH_PRIVATE_USE_SURROGATES", true),
              })
          .put(
              new Identifier("lines"),
              new Import[] {
                newImport("java.nio.file.Files.lines", true),
              })
          .put(
              new Identifier("BasicComboPopup"),
              new Import[] {
                newImport("javax.swing.plaf.basic.BasicComboPopup", false),
              })
          .put(
              new Identifier("codePointCount"),
              new Import[] {
                newImport("java.lang.Character.codePointCount", true),
              })
          .put(
              new Identifier("unquote"),
              new Import[] {
                newImport("javax.management.ObjectName.unquote", true),
              })
          .put(
              new Identifier("GE"),
              new Import[] {
                newImport("javax.management.Query.GE", true),
              })
          .put(
              new Identifier("STRING_TO_COMPARE_VALUE_MATCHED"),
              new Import[] {
                newImport(
                    "javax.management.monitor.MonitorNotification.STRING_TO_COMPARE_VALUE_MATCHED",
                    true),
              })
          .put(
              new Identifier("Condition"),
              new Import[] {
                newImport("java.util.concurrent.locks.Condition", false),
              })
          .put(
              new Identifier("DURATION_YEARMONTH"),
              new Import[] {
                newImport("javax.xml.datatype.DatatypeConstants.DURATION_YEARMONTH", true),
              })
          .put(
              new Identifier("TMRESUME"),
              new Import[] {
                newImport("javax.transaction.xa.XAResource.TMRESUME", true),
              })
          .put(
              new Identifier("TC_CLASSDESC"),
              new Import[] {
                newImport("java.io.ObjectStreamConstants.TC_CLASSDESC", true),
              })
          .put(
              new Identifier("CONTEXT_EXPIRED"),
              new Import[] {
                newImport("org.ietf.jgss.GSSException.CONTEXT_EXPIRED", true),
              })
          .put(
              new Identifier("H1"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.H1", true),
              })
          .put(
              new Identifier("H2"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.H2", true),
              })
          .put(
              new Identifier("H3"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.H3", true),
              })
          .put(
              new Identifier("OPEN_DIALOG"),
              new Import[] {
                newImport("javax.swing.JFileChooser.OPEN_DIALOG", true),
              })
          .put(
              new Identifier("MESSAGE_TYPE_PROPERTY"),
              new Import[] {
                newImport("javax.swing.JOptionPane.MESSAGE_TYPE_PROPERTY", true),
              })
          .put(
              new Identifier("H4"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.H4", true),
              })
          .put(
              new Identifier("RetentionPolicy"),
              new Import[] {
                newImport("java.lang.annotation.RetentionPolicy", false),
              })
          .put(
              new Identifier("GT"),
              new Import[] {
                newImport("javax.management.Query.GT", true),
              })
          .put(
              new Identifier("H5"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.H5", true),
              })
          .put(
              new Identifier("H6"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.H6", true),
              })
          .put(
              new Identifier("BAD_CONTEXT"),
              new Import[] {
                newImport("org.omg.CORBA.BAD_CONTEXT", false),
              })
          .put(
              new Identifier("SHORT"),
              new Import[] {
                newImport("java.text.DateFormat.SHORT", true),
                newImport("java.util.Calendar.SHORT", true),
                newImport("java.util.TimeZone.SHORT", true),
                newImport("javax.management.openmbean.SimpleType.SHORT", true),
              })
          .put(
              new Identifier("THRESHOLD_HIGH_VALUE_EXCEEDED"),
              new Import[] {
                newImport(
                    "javax.management.monitor.MonitorNotification.THRESHOLD_HIGH_VALUE_EXCEEDED",
                    true),
              })
          .put(
              new Identifier("HTMLTextAction"),
              new Import[] {
                newImport("javax.swing.text.html.HTMLEditorKit.HTMLTextAction", false),
              })
          .put(
              new Identifier("BORDER_TOP_STYLE"),
              new Import[] {
                newImport("javax.swing.text.html.CSS.Attribute.BORDER_TOP_STYLE", true),
              })
          .put(
              new Identifier("CJK_STROKES"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.CJK_STROKES", true),
              })
          .put(
              new Identifier("START"),
              new Import[] {
                newImport("javax.sound.midi.ShortMessage.START", true),
                newImport("javax.sound.sampled.LineEvent.Type.START", true),
                newImport("javax.swing.text.html.HTML.Attribute.START", true),
              })
          .put(
              new Identifier("TYPE_4CLR"),
              new Import[] {
                newImport("java.awt.color.ColorSpace.TYPE_4CLR", true),
              })
          .put(
              new Identifier("_tk_string"),
              new Import[] {
                newImport("org.omg.CORBA.TCKind._tk_string", true),
              })
          .put(
              new Identifier("BAD_MIC"),
              new Import[] {
                newImport("org.ietf.jgss.GSSException.BAD_MIC", true),
              })
          .put(
              new Identifier("ARGV"),
              new Import[] {
                newImport("javax.script.ScriptEngine.ARGV", true),
              })
          .put(
              new Identifier("Enum"),
              new Import[] {
                newImport("java.lang.Enum", false),
              })
          .put(
              new Identifier("LOWER_TRAILING_CORNER"),
              new Import[] {
                newImport("javax.swing.ScrollPaneConstants.LOWER_TRAILING_CORNER", true),
              })
          .put(
              new Identifier("exportObject"),
              new Import[] {
                newImport("java.rmi.activation.Activatable.exportObject", true),
                newImport("java.rmi.server.UnicastRemoteObject.exportObject", true),
                newImport("javax.rmi.PortableRemoteObject.exportObject", true),
              })
          .put(
              new Identifier("getMidiDevice"),
              new Import[] {
                newImport("javax.sound.midi.MidiSystem.getMidiDevice", true),
              })
          .put(
              new Identifier("HR"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.HR", true),
              })
          .put(
              new Identifier("MBeanServerPermission"),
              new Import[] {
                newImport("javax.management.MBeanServerPermission", false),
              })
          .put(
              new Identifier("getSplitPaneBorder"),
              new Import[] {
                newImport("javax.swing.plaf.basic.BasicBorders.getSplitPaneBorder", true),
              })
          .put(
              new Identifier("CharacterAttribute"),
              new Import[] {
                newImport("javax.swing.text.AttributeSet.CharacterAttribute", false),
              })
          .put(
              new Identifier("VK_OPEN_BRACKET"),
              new Import[] {
                newImport("java.awt.event.KeyEvent.VK_OPEN_BRACKET", true),
              })
          .put(
              new Identifier("MultiColorChooserUI"),
              new Import[] {
                newImport("javax.swing.plaf.multi.MultiColorChooserUI", false),
              })
          .put(
              new Identifier("narrow"),
              new Import[] {
                newImport("javax.rmi.PortableRemoteObject.narrow", true),
                newImport("org.omg.CORBA.CurrentHelper.narrow", true),
                newImport("org.omg.CORBA.IDLTypeHelper.narrow", true),
                newImport("org.omg.CORBA.PolicyHelper.narrow", true),
                newImport("org.omg.CosNaming.BindingIteratorHelper.narrow", true),
                newImport("org.omg.CosNaming.NamingContextExtHelper.narrow", true),
                newImport("org.omg.CosNaming.NamingContextHelper.narrow", true),
                newImport("org.omg.DynamicAny.DynAnyFactoryHelper.narrow", true),
                newImport("org.omg.DynamicAny.DynAnyHelper.narrow", true),
                newImport("org.omg.DynamicAny.DynArrayHelper.narrow", true),
                newImport("org.omg.DynamicAny.DynEnumHelper.narrow", true),
                newImport("org.omg.DynamicAny.DynFixedHelper.narrow", true),
                newImport("org.omg.DynamicAny.DynSequenceHelper.narrow", true),
                newImport("org.omg.DynamicAny.DynStructHelper.narrow", true),
                newImport("org.omg.DynamicAny.DynUnionHelper.narrow", true),
                newImport("org.omg.DynamicAny.DynValueHelper.narrow", true),
                newImport("org.omg.IOP.CodecFactoryHelper.narrow", true),
                newImport("org.omg.PortableInterceptor.CurrentHelper.narrow", true),
                newImport("org.omg.PortableInterceptor.IORInterceptor_3_0Helper.narrow", true),
                newImport("org.omg.PortableServer.CurrentHelper.narrow", true),
                newImport("org.omg.PortableServer.POAHelper.narrow", true),
                newImport("org.omg.PortableServer.ServantActivatorHelper.narrow", true),
                newImport("org.omg.PortableServer.ServantLocatorHelper.narrow", true),
              })
          .put(
              new Identifier("ID"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Attribute.ID", true),
                newImport("javax.swing.text.html.parser.DTDConstants.ID", true),
                newImport("javax.xml.ws.RespectBindingFeature.ID", true),
                newImport("javax.xml.ws.soap.AddressingFeature.ID", true),
                newImport("javax.xml.ws.soap.MTOMFeature.ID", true),
              })
          .put(
              new Identifier("MOUSE_MOTION_EVENT_MASK"),
              new Import[] {
                newImport("java.awt.AWTEvent.MOUSE_MOTION_EVENT_MASK", true),
              })
          .put(
              new Identifier("TYPE_GENERAL_TRANSFORM"),
              new Import[] {
                newImport("java.awt.geom.AffineTransform.TYPE_GENERAL_TRANSFORM", true),
              })
          .put(
              new Identifier("STAPLE_TOP_LEFT"),
              new Import[] {
                newImport("javax.print.attribute.standard.Finishings.STAPLE_TOP_LEFT", true),
              })
          .put(
              new Identifier("FOCUSABLE"),
              new Import[] {
                newImport("javax.accessibility.AccessibleState.FOCUSABLE", true),
              })
          .put(
              new Identifier("ULAW"),
              new Import[] {
                newImport("javax.sound.sampled.AudioFormat.Encoding.ULAW", true),
              })
          .put(
              new Identifier("ceil"),
              new Import[] {
                newImport("java.lang.Math.ceil", true),
                newImport("java.lang.StrictMath.ceil", true),
              })
          .put(
              new Identifier("noneOf"),
              new Import[] {
                newImport("java.util.EnumSet.noneOf", true),
              })
          .put(
              new Identifier("CertPathValidatorException"),
              new Import[] {
                newImport("java.security.cert.CertPathValidatorException", false),
              })
          .put(
              new Identifier("SLIDER_THUMB"),
              new Import[] {
                newImport("javax.swing.plaf.synth.Region.SLIDER_THUMB", true),
              })
          .put(
              new Identifier("RandomAccessFile"),
              new Import[] {
                newImport("java.io.RandomAccessFile", false),
              })
          .put(
              new Identifier("createSNIMatcher"),
              new Import[] {
                newImport("javax.net.ssl.SNIHostName.createSNIMatcher", true),
              })
          .put(
              new Identifier("VK_MULTIPLY"),
              new Import[] {
                newImport("java.awt.event.KeyEvent.VK_MULTIPLY", true),
              })
          .put(
              new Identifier("VerifyError"),
              new Import[] {
                newImport("java.lang.VerifyError", false),
              })
          .put(
              new Identifier("IntFunction"),
              new Import[] {
                newImport("java.util.function.IntFunction", false),
              })
          .put(
              new Identifier("setDefaultAllowUserInteraction"),
              new Import[] {
                newImport("java.net.URLConnection.setDefaultAllowUserInteraction", true),
              })
          .put(
              new Identifier("RenderableImageOp"),
              new Import[] {
                newImport("java.awt.image.renderable.RenderableImageOp", false),
              })
          .put(
              new Identifier("SOUTH_EAST"),
              new Import[] {
                newImport("javax.swing.SwingConstants.SOUTH_EAST", true),
              })
          .put(
              new Identifier("ConcurrentLinkedQueue"),
              new Import[] {
                newImport("java.util.concurrent.ConcurrentLinkedQueue", false),
              })
          .put(
              new Identifier("DPI"),
              new Import[] {
                newImport("javax.print.attribute.ResolutionSyntax.DPI", true),
              })
          .put(
              new Identifier("showOptionDialog"),
              new Import[] {
                newImport("javax.swing.JOptionPane.showOptionDialog", true),
              })
          .put(
              new Identifier("LSSerializerFilter"),
              new Import[] {
                newImport("org.w3c.dom.ls.LSSerializerFilter", false),
              })
          .put(
              new Identifier("getMimeDecoder"),
              new Import[] {
                newImport("java.util.Base64.getMimeDecoder", true),
              })
          .put(
              new Identifier("UNDERLINE_ON"),
              new Import[] {
                newImport("java.awt.font.TextAttribute.UNDERLINE_ON", true),
              })
          .put(
              new Identifier("SHAPES"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Attribute.SHAPES", true),
              })
          .put(
              new Identifier("UPDATE_WHEN_ON_EDT"),
              new Import[] {
                newImport("javax.swing.text.DefaultCaret.UPDATE_WHEN_ON_EDT", true),
              })
          .put(
              new Identifier("asFileAttribute"),
              new Import[] {
                newImport("java.nio.file.attribute.PosixFilePermissions.asFileAttribute", true),
              })
          .put(
              new Identifier("URI"),
              new Import[] {
                newImport("java.net.URI", false),
              })
          .put(
              new Identifier("MenuElement"),
              new Import[] {
                newImport("javax.swing.MenuElement", false),
              })
          .put(
              new Identifier("SOAPMessage"),
              new Import[] {
                newImport("javax.xml.soap.SOAPMessage", false),
              })
          .put(
              new Identifier("isDispatchThread"),
              new Import[] {
                newImport("java.awt.EventQueue.isDispatchThread", true),
              })
          .put(
              new Identifier("URL"),
              new Import[] {
                newImport("java.net.URL", false), newImport("javax.print.DocFlavor.URL", false),
              })
          .put(
              new Identifier("SimpleType"),
              new Import[] {
                newImport("javax.management.openmbean.SimpleType", false),
              })
          .put(
              new Identifier("INTERNAL_FRAME_ACTIVATED"),
              new Import[] {
                newImport("javax.swing.event.InternalFrameEvent.INTERNAL_FRAME_ACTIVATED", true),
              })
          .put(
              new Identifier("Target"),
              new Import[] {
                newImport("java.lang.annotation.Target", false),
              })
          .put(
              new Identifier("checkedMap"),
              new Import[] {
                newImport("java.util.Collections.checkedMap", true),
              })
          .put(
              new Identifier("PointerInfo"),
              new Import[] {
                newImport("java.awt.PointerInfo", false),
              })
          .put(
              new Identifier("RelationType"),
              new Import[] {
                newImport("javax.management.relation.RelationType", false),
              })
          .put(
              new Identifier("getByName"),
              new Import[] {
                newImport("java.net.InetAddress.getByName", true),
                newImport("java.net.NetworkInterface.getByName", true),
              })
          .put(
              new Identifier("JPEGImageWriteParam"),
              new Import[] {
                newImport("javax.imageio.plugins.jpeg.JPEGImageWriteParam", false),
              })
          .put(
              new Identifier("Menu"),
              new Import[] {
                newImport("java.awt.Menu", false),
              })
          .put(
              new Identifier("ExecutionException"),
              new Import[] {
                newImport("java.util.concurrent.ExecutionException", false),
              })
          .put(
              new Identifier("WAIS"),
              new Import[] {
                newImport("javax.print.attribute.standard.ReferenceUriSchemesSupported.WAIS", true),
              })
          .put(
              new Identifier("isNormalized"),
              new Import[] {
                newImport("java.text.Normalizer.isNormalized", true),
              })
          .put(
              new Identifier("SOAP_DATAENCODINGUNKNOWN_FAULT"),
              new Import[] {
                newImport("javax.xml.soap.SOAPConstants.SOAP_DATAENCODINGUNKNOWN_FAULT", true),
              })
          .put(
              new Identifier("ParsePosition"),
              new Import[] {
                newImport("java.text.ParsePosition", false),
              })
          .put(
              new Identifier("GraphicsConfigTemplate"),
              new Import[] {
                newImport("java.awt.GraphicsConfigTemplate", false),
              })
          .put(
              new Identifier("comparingDouble"),
              new Import[] {
                newImport("java.util.Comparator.comparingDouble", true),
              })
          .put(
              new Identifier("ClassCircularityError"),
              new Import[] {
                newImport("java.lang.ClassCircularityError", false),
              })
          .put(
              new Identifier("TypeNotPresentException"),
              new Import[] {
                newImport("java.lang.TypeNotPresentException", false),
              })
          .put(
              new Identifier("StringMonitorMBean"),
              new Import[] {
                newImport("javax.management.monitor.StringMonitorMBean", false),
              })
          .put(
              new Identifier("DIALOG"),
              new Import[] {
                newImport("java.awt.Font.DIALOG", true),
                newImport("javax.accessibility.AccessibleRole.DIALOG", true),
              })
          .put(
              new Identifier("err"),
              new Import[] {
                newImport("java.io.FileDescriptor.err", true),
                newImport("java.lang.System.err", true),
              })
          .put(
              new Identifier("LATIN_1_SUPPLEMENT"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.LATIN_1_SUPPLEMENT", true),
              })
          .put(
              new Identifier("PROTOCOL_VERSION_2"),
              new Import[] {
                newImport("java.io.ObjectStreamConstants.PROTOCOL_VERSION_2", true),
              })
          .put(
              new Identifier("MessageDigestSpi"),
              new Import[] {
                newImport("java.security.MessageDigestSpi", false),
              })
          .put(
              new Identifier("PROTOCOL_VERSION_1"),
              new Import[] {
                newImport("java.io.ObjectStreamConstants.PROTOCOL_VERSION_1", true),
              })
          .put(
              new Identifier("GaugeMonitorMBean"),
              new Import[] {
                newImport("javax.management.monitor.GaugeMonitorMBean", false),
              })
          .put(
              new Identifier("CONTAINER_LAST"),
              new Import[] {
                newImport("java.awt.event.ContainerEvent.CONTAINER_LAST", true),
              })
          .put(
              new Identifier("SimpleImmutableEntry"),
              new Import[] {
                newImport("java.util.AbstractMap.SimpleImmutableEntry", false),
              })
          .put(
              new Identifier("VALUE_STROKE_NORMALIZE"),
              new Import[] {
                newImport("java.awt.RenderingHints.VALUE_STROKE_NORMALIZE", true),
              })
          .put(
              new Identifier("AtomicLongArray"),
              new Import[] {
                newImport("java.util.concurrent.atomic.AtomicLongArray", false),
              })
          .put(
              new Identifier("LE"),
              new Import[] {
                newImport("javax.management.Query.LE", true),
              })
          .put(
              new Identifier("ExceptionListener"),
              new Import[] {
                newImport("java.beans.ExceptionListener", false),
              })
          .put(
              new Identifier("_IDLTypeStub"),
              new Import[] {
                newImport("org.omg.CORBA._IDLTypeStub", false),
              })
          .put(
              new Identifier("getLocalizedDateTimePattern"),
              new Import[] {
                newImport(
                    "java.time.format.DateTimeFormatterBuilder.getLocalizedDateTimePattern", true),
              })
          .put(
              new Identifier("LI"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.LI", true),
              })
          .put(
              new Identifier("NONCRITICAL"),
              new Import[] {
                newImport("javax.naming.ldap.Control.NONCRITICAL", true),
              })
          .put(
              new Identifier("isIdentifier"),
              new Import[] {
                newImport("javax.lang.model.SourceVersion.isIdentifier", true),
              })
          .put(
              new Identifier("SUBSIZED"),
              new Import[] {
                newImport("java.util.Spliterator.SUBSIZED", true),
              })
          .put(
              new Identifier("UTC"),
              new Import[] {
                newImport("java.time.ZoneOffset.UTC", true), newImport("java.util.Date.UTC", true),
              })
          .put(
              new Identifier("INBOUND_MESSAGE_ATTACHMENTS"),
              new Import[] {
                newImport("javax.xml.ws.handler.MessageContext.INBOUND_MESSAGE_ATTACHMENTS", true),
              })
          .put(
              new Identifier("LT"),
              new Import[] {
                newImport("javax.management.Query.LT", true),
              })
          .put(
              new Identifier("DescriptorKey"),
              new Import[] {
                newImport("javax.management.DescriptorKey", false),
              })
          .put(
              new Identifier("dk_Exception"),
              new Import[] {
                newImport("org.omg.CORBA.DefinitionKind.dk_Exception", true),
              })
          .put(
              new Identifier("DGC_ID"),
              new Import[] {
                newImport("java.rmi.server.ObjID.DGC_ID", true),
              })
          .put(
              new Identifier("QUESTION_DIALOG"),
              new Import[] {
                newImport("javax.swing.JRootPane.QUESTION_DIALOG", true),
              })
          .put(
              new Identifier("VLINK"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Attribute.VLINK", true),
              })
          .put(
              new Identifier("MediaPrintableArea"),
              new Import[] {
                newImport("javax.print.attribute.standard.MediaPrintableArea", false),
              })
          .put(
              new Identifier("PushbackInputStream"),
              new Import[] {
                newImport("java.io.PushbackInputStream", false),
              })
          .put(
              new Identifier("PSSParameterSpec"),
              new Import[] {
                newImport("java.security.spec.PSSParameterSpec", false),
              })
          .put(
              new Identifier("MD"),
              new Import[] {
                newImport("javax.swing.text.html.parser.DTDConstants.MD", true),
              })
          .put(
              new Identifier("TC_BASE"),
              new Import[] {
                newImport("java.io.ObjectStreamConstants.TC_BASE", true),
              })
          .put(
              new Identifier("textHighlightText"),
              new Import[] {
                newImport("java.awt.SystemColor.textHighlightText", true),
              })
          .put(
              new Identifier("LoaderHandler"),
              new Import[] {
                newImport("java.rmi.server.LoaderHandler", false),
              })
          .put(
              new Identifier("FileObject"),
              new Import[] {
                newImport("javax.tools.FileObject", false),
              })
          .put(
              new Identifier("NotificationFilter"),
              new Import[] {
                newImport("javax.management.NotificationFilter", false),
              })
          .put(
              new Identifier("dk_Wstring"),
              new Import[] {
                newImport("org.omg.CORBA.DefinitionKind.dk_Wstring", true),
              })
          .put(
              new Identifier("ServerSocketChannel"),
              new Import[] {
                newImport("java.nio.channels.ServerSocketChannel", false),
              })
          .put(
              new Identifier("MM"),
              new Import[] {
                newImport("javax.print.attribute.Size2DSyntax.MM", true),
                newImport("javax.print.attribute.standard.MediaPrintableArea.MM", true),
              })
          .put(
              new Identifier("SLIDER_TRACK"),
              new Import[] {
                newImport("javax.swing.plaf.synth.Region.SLIDER_TRACK", true),
              })
          .put(
              new Identifier("DST"),
              new Import[] {
                newImport("java.awt.AlphaComposite.DST", true),
              })
          .put(
              new Identifier("MS"),
              new Import[] {
                newImport("javax.swing.text.html.parser.DTDConstants.MS", true),
              })
          .put(
              new Identifier("writableAction"),
              new Import[] {
                newImport("javax.swing.text.DefaultEditorKit.writableAction", true),
              })
          .put(
              new Identifier("HTTP_USE_PROXY"),
              new Import[] {
                newImport("java.net.HttpURLConnection.HTTP_USE_PROXY", true),
              })
          .put(
              new Identifier("DesignMode"),
              new Import[] {
                newImport("java.beans.DesignMode", false),
              })
          .put(
              new Identifier("VK_DEAD_IOTA"),
              new Import[] {
                newImport("java.awt.event.KeyEvent.VK_DEAD_IOTA", true),
              })
          .put(
              new Identifier("ServiceMode"),
              new Import[] {
                newImport("javax.xml.ws.ServiceMode", false),
              })
          .put(
              new Identifier("doAsPrivileged"),
              new Import[] {
                newImport("javax.security.auth.Subject.doAsPrivileged", true),
              })
          .put(
              new Identifier("NA"),
              new Import[] {
                newImport("javax.print.attribute.standard.MediaSize.NA", false),
              })
          .put(
              new Identifier("NUM_LOCK"),
              new Import[] {
                newImport("java.awt.Event.NUM_LOCK", true),
              })
          .put(
              new Identifier("isLetterOrDigit"),
              new Import[] {
                newImport("java.lang.Character.isLetterOrDigit", true),
              })
          .put(
              new Identifier("lastIndexOfSubList"),
              new Import[] {
                newImport("java.util.Collections.lastIndexOfSubList", true),
              })
          .put(
              new Identifier("DTD"),
              new Import[] {
                newImport("javax.swing.text.html.parser.DTD", false),
                newImport("javax.xml.stream.XMLStreamConstants.DTD", true),
                newImport("javax.xml.stream.events.DTD", false),
              })
          .put(
              new Identifier("isKeyword"),
              new Import[] {
                newImport("javax.lang.model.SourceVersion.isKeyword", true),
              })
          .put(
              new Identifier("REGISTRY_ID"),
              new Import[] {
                newImport("java.rmi.server.ObjID.REGISTRY_ID", true),
              })
          .put(
              new Identifier("VOID"),
              new Import[] {
                newImport("javax.management.openmbean.SimpleType.VOID", true),
              })
          .put(
              new Identifier("FILTERED"),
              new Import[] {
                newImport("java.util.zip.Deflater.FILTERED", true),
              })
          .put(
              new Identifier("NO"),
              new Import[] {
                newImport("javax.security.auth.callback.ConfirmationCallback.NO", true),
              })
          .put(
              new Identifier("deletePrevWordAction"),
              new Import[] {
                newImport("javax.swing.text.DefaultEditorKit.deletePrevWordAction", true),
              })
          .put(
              new Identifier("NavigableMap"),
              new Import[] {
                newImport("java.util.NavigableMap", false),
              })
          .put(
              new Identifier("COMPONENT_LAST"),
              new Import[] {
                newImport("java.awt.event.ComponentEvent.COMPONENT_LAST", true),
              })
          .put(
              new Identifier("SocketSecurityException"),
              new Import[] {
                newImport("java.rmi.server.SocketSecurityException", false),
              })
          .put(
              new Identifier("NODE_CLONED"),
              new Import[] {
                newImport("org.w3c.dom.UserDataHandler.NODE_CLONED", true),
              })
          .put(
              new Identifier("LANG"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Attribute.LANG", true),
              })
          .put(
              new Identifier("NoSuchMethodException"),
              new Import[] {
                newImport("java.lang.NoSuchMethodException", false),
              })
          .put(
              new Identifier("CODESET_INCOMPATIBLE"),
              new Import[] {
                newImport("org.omg.CORBA.CODESET_INCOMPATIBLE", false),
              })
          .put(
              new Identifier("VK_MINUS"),
              new Import[] {
                newImport("java.awt.event.KeyEvent.VK_MINUS", true),
              })
          .put(
              new Identifier("PKIXParameters"),
              new Import[] {
                newImport("java.security.cert.PKIXParameters", false),
              })
          .put(
              new Identifier("parkUntil"),
              new Import[] {
                newImport("java.util.concurrent.locks.LockSupport.parkUntil", true),
              })
          .put(
              new Identifier("OffsetTime"),
              new Import[] {
                newImport("java.time.OffsetTime", false),
              })
          .put(
              new Identifier("DOMValidateContext"),
              new Import[] {
                newImport("javax.xml.crypto.dsig.dom.DOMValidateContext", false),
              })
          .put(
              new Identifier("isPublic"),
              new Import[] {
                newImport("java.lang.reflect.Modifier.isPublic", true),
              })
          .put(
              new Identifier("isDesignTime"),
              new Import[] {
                newImport("java.beans.Beans.isDesignTime", true),
              })
          .put(
              new Identifier("OK"),
              new Import[] {
                newImport("javax.security.auth.callback.ConfirmationCallback.OK", true),
              })
          .put(
              new Identifier("OL"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.OL", true),
              })
          .put(
              new Identifier("FlavorEvent"),
              new Import[] {
                newImport("java.awt.datatransfer.FlavorEvent", false),
              })
          .put(
              new Identifier("getMBeanServer"),
              new Import[] {
                newImport("javax.management.QueryEval.getMBeanServer", true),
              })
          .put(
              new Identifier("TimeZoneNameProvider"),
              new Import[] {
                newImport("java.util.spi.TimeZoneNameProvider", false),
              })
          .put(
              new Identifier("BUSY"),
              new Import[] {
                newImport("javax.accessibility.AccessibleState.BUSY", true),
              })
          .put(
              new Identifier("MapMode"),
              new Import[] {
                newImport("java.nio.channels.FileChannel.MapMode", false),
              })
          .put(
              new Identifier("MinimumHeight"),
              new Import[] {
                newImport("javax.swing.plaf.basic.BasicOptionPaneUI.MinimumHeight", true),
              })
          .put(
              new Identifier("ENCODING"),
              new Import[] {
                newImport("javax.xml.transform.OutputKeys.ENCODING", true),
              })
          .put(
              new Identifier("_tk_null"),
              new Import[] {
                newImport("org.omg.CORBA.TCKind._tk_null", true),
              })
          .put(
              new Identifier("getMostRecentEventTime"),
              new Import[] {
                newImport("java.awt.EventQueue.getMostRecentEventTime", true),
              })
          .put(
              new Identifier("Instrument"),
              new Import[] {
                newImport("javax.sound.midi.Instrument", false),
              })
          .put(
              new Identifier("PI"),
              new Import[] {
                newImport("java.lang.Math.PI", true),
                newImport("java.lang.StrictMath.PI", true),
                newImport("javax.swing.text.html.parser.DTDConstants.PI", true),
              })
          .put(
              new Identifier("BUHID"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.BUHID", true),
              })
          .put(
              new Identifier("PM"),
              new Import[] {
                newImport("java.util.Calendar.PM", true),
              })
          .build();
}
