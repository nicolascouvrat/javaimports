// Code generated by GenerateStdlib.java. DO NOT EDIT.
package com.nikodoko.javaimports.stdlib.internal.api.v8;

import static com.nikodoko.javaimports.stdlib.internal.Stdlib.newImport;

import com.google.common.collect.ImmutableMap;
import com.nikodoko.javaimports.common.Identifier;
import com.nikodoko.javaimports.common.Import;
import java.util.Map;

public class Java8StdlibChunk26 {
  static final Map<Identifier, Import[]> CLASSES =
      new ImmutableMap.Builder<Identifier, Import[]>()
          .put(
              new Identifier("XmlElementRef"),
              new Import[] {
                newImport("javax.xml.bind.annotation.XmlElementRef", false),
              })
          .put(
              new Identifier("FLAG_BRIDGES"),
              new Import[] {
                newImport("java.lang.invoke.LambdaMetafactory.FLAG_BRIDGES", true),
              })
          .put(
              new Identifier("getArrayType"),
              new Import[] {
                newImport("javax.management.openmbean.ArrayType.getArrayType", true),
              })
          .put(
              new Identifier("MOUSE_FIRST"),
              new Import[] {
                newImport("java.awt.event.MouseEvent.MOUSE_FIRST", true),
              })
          .put(
              new Identifier("UnicastRemoteObject"),
              new Import[] {
                newImport("java.rmi.server.UnicastRemoteObject", false),
              })
          .put(
              new Identifier("QueryExp"),
              new Import[] {
                newImport("javax.management.QueryExp", false),
              })
          .put(
              new Identifier("StandardOpenOption"),
              new Import[] {
                newImport("java.nio.file.StandardOpenOption", false),
              })
          .put(
              new Identifier("setProperties"),
              new Import[] {
                newImport("java.lang.System.setProperties", true),
              })
          .put(
              new Identifier("IIOReadProgressListener"),
              new Import[] {
                newImport("javax.imageio.event.IIOReadProgressListener", false),
              })
          .put(
              new Identifier("PNG"),
              new Import[] {
                newImport("javax.print.DocFlavor.BYTE_ARRAY.PNG", true),
                newImport("javax.print.DocFlavor.INPUT_STREAM.PNG", true),
                newImport("javax.print.DocFlavor.URL.PNG", true),
              })
          .put(
              new Identifier("DIALOG_INPUT"),
              new Import[] {
                newImport("java.awt.Font.DIALOG_INPUT", true),
              })
          .put(
              new Identifier("CYRILLIC_SUPPLEMENTARY"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.CYRILLIC_SUPPLEMENTARY", true),
              })
          .put(
              new Identifier("ptLineDistSq"),
              new Import[] {
                newImport("java.awt.geom.Line2D.ptLineDistSq", true),
              })
          .put(
              new Identifier("BAD_POLICY_TYPE"),
              new Import[] {
                newImport("org.omg.CORBA.BAD_POLICY_TYPE", false),
              })
          .put(
              new Identifier("PrinterJob"),
              new Import[] {
                newImport("java.awt.print.PrinterJob", false),
              })
          .put(
              new Identifier("CENTER"),
              new Import[] {
                newImport("java.awt.BorderLayout.CENTER", true),
                newImport("java.awt.FlowLayout.CENTER", true),
                newImport("java.awt.GridBagConstraints.CENTER", true),
                newImport("java.awt.Label.CENTER", true),
                newImport("javax.swing.SwingConstants.CENTER", true),
                newImport("javax.swing.border.TitledBorder.CENTER", true),
                newImport("javax.swing.text.html.HTML.Tag.CENTER", true),
              })
          .put(
              new Identifier("XA_HEURHAZ"),
              new Import[] {
                newImport("javax.transaction.xa.XAException.XA_HEURHAZ", true),
              })
          .put(
              new Identifier("Month"),
              new Import[] {
                newImport("java.time.Month", false),
              })
          .put(
              new Identifier("REQUEST_X509CERTIFICATE"),
              new Import[] {
                newImport("javax.xml.ws.spi.http.HttpExchange.REQUEST_X509CERTIFICATE", true),
              })
          .put(
              new Identifier("ENDHDR"),
              new Import[] {
                newImport("java.util.jar.JarEntry.ENDHDR", true),
                newImport("java.util.jar.JarFile.ENDHDR", true),
                newImport("java.util.jar.JarInputStream.ENDHDR", true),
                newImport("java.util.jar.JarOutputStream.ENDHDR", true),
                newImport("java.util.zip.ZipEntry.ENDHDR", true),
                newImport("java.util.zip.ZipFile.ENDHDR", true),
                newImport("java.util.zip.ZipInputStream.ENDHDR", true),
                newImport("java.util.zip.ZipOutputStream.ENDHDR", true),
              })
          .put(
              new Identifier("CodecFactoryOperations"),
              new Import[] {
                newImport("org.omg.IOP.CodecFactoryOperations", false),
              })
          .put(
              new Identifier("TMSUSPEND"),
              new Import[] {
                newImport("javax.transaction.xa.XAResource.TMSUSPEND", true),
              })
          .put(
              new Identifier("Permission"),
              new Import[] {
                newImport("java.security.Permission", false),
                newImport("java.security.acl.Permission", false),
              })
          .put(
              new Identifier("MediaType"),
              new Import[] {
                newImport("java.awt.PageAttributes.MediaType", false),
              })
          .put(
              new Identifier("PROGRESS_BAR"),
              new Import[] {
                newImport("javax.accessibility.AccessibleRole.PROGRESS_BAR", true),
                newImport("javax.swing.plaf.synth.Region.PROGRESS_BAR", true),
              })
          .put(
              new Identifier("SOAPHeaderElement"),
              new Import[] {
                newImport("javax.xml.soap.SOAPHeaderElement", false),
              })
          .put(
              new Identifier("KEY_TEXT_LCD_CONTRAST"),
              new Import[] {
                newImport("java.awt.RenderingHints.KEY_TEXT_LCD_CONTRAST", true),
              })
          .put(
              new Identifier("POA"),
              new Import[] {
                newImport("org.omg.PortableServer.POA", false),
              })
          .put(
              new Identifier("ObjectChangeListener"),
              new Import[] {
                newImport("javax.naming.event.ObjectChangeListener", false),
              })
          .put(
              new Identifier("ConfigurationSpi"),
              new Import[] {
                newImport("javax.security.auth.login.ConfigurationSpi", false),
              })
          .put(
              new Identifier("toUnsignedInt"),
              new Import[] {
                newImport("java.lang.Byte.toUnsignedInt", true),
                newImport("java.lang.Short.toUnsignedInt", true),
              })
          .put(
              new Identifier("Float"),
              new Import[] {
                newImport("java.awt.geom.Arc2D.Float", false),
                newImport("java.awt.geom.CubicCurve2D.Float", false),
                newImport("java.awt.geom.Ellipse2D.Float", false),
                newImport("java.awt.geom.Line2D.Float", false),
                newImport("java.awt.geom.Path2D.Float", false),
                newImport("java.awt.geom.Point2D.Float", false),
                newImport("java.awt.geom.QuadCurve2D.Float", false),
                newImport("java.awt.geom.Rectangle2D.Float", false),
                newImport("java.awt.geom.RoundRectangle2D.Float", false),
                newImport("java.lang.Float", false),
              })
          .put(
              new Identifier("AnnotationMirror"),
              new Import[] {
                newImport("javax.lang.model.element.AnnotationMirror", false),
              })
          .put(
              new Identifier("ANCHOR_SELECTION_PATH_PROPERTY"),
              new Import[] {
                newImport("javax.swing.JTree.ANCHOR_SELECTION_PATH_PROPERTY", true),
              })
          .put(
              new Identifier("ROUND_CEILING"),
              new Import[] {
                newImport("java.math.BigDecimal.ROUND_CEILING", true),
              })
          .put(
              new Identifier("BasicPopupMenuSeparatorUI"),
              new Import[] {
                newImport("javax.swing.plaf.basic.BasicPopupMenuSeparatorUI", false),
              })
          .put(
              new Identifier("ADD_OVERRIDE"),
              new Import[] {
                newImport("org.omg.CORBA.SetOverrideType.ADD_OVERRIDE", true),
              })
          .put(
              new Identifier("BUBBLING_PHASE"),
              new Import[] {
                newImport("org.w3c.dom.events.Event.BUBBLING_PHASE", true),
              })
          .put(
              new Identifier("WINDOW_DESTROY"),
              new Import[] {
                newImport("java.awt.Event.WINDOW_DESTROY", true),
              })
          .put(
              new Identifier("ExemptionMechanismException"),
              new Import[] {
                newImport("javax.crypto.ExemptionMechanismException", false),
              })
          .put(
              new Identifier("AbstractSpinnerModel"),
              new Import[] {
                newImport("javax.swing.AbstractSpinnerModel", false),
              })
          .put(
              new Identifier("ROUND_UNNECESSARY"),
              new Import[] {
                newImport("java.math.BigDecimal.ROUND_UNNECESSARY", true),
              })
          .put(
              new Identifier("RelationSupportMBean"),
              new Import[] {
                newImport("javax.management.relation.RelationSupportMBean", false),
              })
          .put(
              new Identifier("StyleConstants"),
              new Import[] {
                newImport("javax.swing.text.StyleConstants", false),
              })
          .put(
              new Identifier("ALLOWED_CLASSNAMES"),
              new Import[] {
                newImport("javax.management.openmbean.OpenType.ALLOWED_CLASSNAMES", true),
              })
          .put(
              new Identifier("_USER_ID"),
              new Import[] {
                newImport("org.omg.PortableServer.IdAssignmentPolicyValue._USER_ID", true),
              })
          .put(
              new Identifier("DefaultTableModel"),
              new Import[] {
                newImport("javax.swing.table.DefaultTableModel", false),
              })
          .put(
              new Identifier("JobName"),
              new Import[] {
                newImport("javax.print.attribute.standard.JobName", false),
              })
          .put(
              new Identifier("global"),
              new Import[] {
                newImport("java.util.logging.Logger.global", true),
              })
          .put(
              new Identifier("RESOLVER"),
              new Import[] {
                newImport("javax.xml.stream.XMLInputFactory.RESOLVER", true),
              })
          .put(
              new Identifier("PPQ"),
              new Import[] {
                newImport("javax.sound.midi.Sequence.PPQ", true),
              })
          .put(
              new Identifier("ICON_MONO_16x16"),
              new Import[] {
                newImport("java.beans.BeanInfo.ICON_MONO_16x16", true),
              })
          .put(
              new Identifier("TYPE_CUSTOM"),
              new Import[] {
                newImport("java.awt.image.BufferedImage.TYPE_CUSTOM", true),
              })
          .put(
              new Identifier("functionColumnUnknown"),
              new Import[] {
                newImport("java.sql.DatabaseMetaData.functionColumnUnknown", true),
              })
          .put(
              new Identifier("INTF_REPOS"),
              new Import[] {
                newImport("org.omg.CORBA.INTF_REPOS", false),
              })
          .put(
              new Identifier("SEG_MOVETO"),
              new Import[] {
                newImport("java.awt.geom.PathIterator.SEG_MOVETO", true),
              })
          .put(
              new Identifier("Scrollbar"),
              new Import[] {
                newImport("java.awt.Scrollbar", false),
              })
          .put(
              new Identifier("iterate"),
              new Import[] {
                newImport("java.util.stream.DoubleStream.iterate", true),
                newImport("java.util.stream.IntStream.iterate", true),
                newImport("java.util.stream.LongStream.iterate", true),
                newImport("java.util.stream.Stream.iterate", true),
              })
          .put(
              new Identifier("Stroke"),
              new Import[] {
                newImport("java.awt.Stroke", false),
              })
          .put(
              new Identifier("DEVELOPER_LOW"),
              new Import[] {
                newImport("javax.print.attribute.standard.PrinterStateReason.DEVELOPER_LOW", true),
              })
          .put(
              new Identifier("BaseRowSet"),
              new Import[] {
                newImport("javax.sql.rowset.BaseRowSet", false),
              })
          .put(
              new Identifier("Composite"),
              new Import[] {
                newImport("java.awt.Composite", false),
              })
          .put(
              new Identifier("getPrimaryControlShadow"),
              new Import[] {
                newImport("javax.swing.plaf.metal.MetalLookAndFeel.getPrimaryControlShadow", true),
              })
          .put(
              new Identifier("UnmodifiableClassException"),
              new Import[] {
                newImport("java.lang.instrument.UnmodifiableClassException", false),
              })
          .put(
              new Identifier("SECONDS"),
              new Import[] {
                newImport("javax.xml.datatype.DatatypeConstants.SECONDS", true),
              })
          .put(
              new Identifier("SimpleAnnotationValueVisitor8"),
              new Import[] {
                newImport("javax.lang.model.util.SimpleAnnotationValueVisitor8", false),
              })
          .put(
              new Identifier("Charset"),
              new Import[] {
                newImport("java.nio.charset.Charset", false),
              })
          .put(
              new Identifier("SealedObject"),
              new Import[] {
                newImport("javax.crypto.SealedObject", false),
              })
          .put(
              new Identifier("SimpleAnnotationValueVisitor6"),
              new Import[] {
                newImport("javax.lang.model.util.SimpleAnnotationValueVisitor6", false),
              })
          .put(
              new Identifier("IOException"),
              new Import[] {
                newImport("java.io.IOException", false),
              })
          .put(
              new Identifier("SimpleAnnotationValueVisitor7"),
              new Import[] {
                newImport("javax.lang.model.util.SimpleAnnotationValueVisitor7", false),
              })
          .put(
              new Identifier("LayoutManager"),
              new Import[] {
                newImport("java.awt.LayoutManager", false),
              })
          .put(
              new Identifier("incrementExact"),
              new Import[] {
                newImport("java.lang.Math.incrementExact", true),
              })
          .put(
              new Identifier("TC_LONGSTRING"),
              new Import[] {
                newImport("java.io.ObjectStreamConstants.TC_LONGSTRING", true),
              })
          .put(
              new Identifier("comparingInt"),
              new Import[] {
                newImport("java.util.Comparator.comparingInt", true),
              })
          .put(
              new Identifier("IDLEntity"),
              new Import[] {
                newImport("org.omg.CORBA.portable.IDLEntity", false),
              })
          .put(
              new Identifier("isLowSurrogate"),
              new Import[] {
                newImport("java.lang.Character.isLowSurrogate", true),
              })
          .put(
              new Identifier("newUnpacker"),
              new Import[] {
                newImport("java.util.jar.Pack200.newUnpacker", true),
              })
          .put(
              new Identifier("CURRENCY_SYMBOLS"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.CURRENCY_SYMBOLS", true),
              })
          .put(
              new Identifier("PRC"),
              new Import[] {
                newImport("java.util.Locale.PRC", true),
              })
          .put(
              new Identifier("TARGET"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Attribute.TARGET", true),
              })
          .put(
              new Identifier("ZERO"),
              new Import[] {
                newImport("java.math.BigDecimal.ZERO", true),
                newImport("java.math.BigInteger.ZERO", true),
                newImport("java.time.Duration.ZERO", true),
                newImport("java.time.Period.ZERO", true),
              })
          .put(
              new Identifier("PRE"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.PRE", true),
              })
          .put(
              new Identifier("SWAP_COLORS"),
              new Import[] {
                newImport("java.awt.font.TextAttribute.SWAP_COLORS", true),
              })
          .put(
              new Identifier("CENTIM"),
              new Import[] {
                newImport("java.util.jar.JarEntry.CENTIM", true),
                newImport("java.util.jar.JarFile.CENTIM", true),
                newImport("java.util.jar.JarInputStream.CENTIM", true),
                newImport("java.util.jar.JarOutputStream.CENTIM", true),
                newImport("java.util.zip.ZipEntry.CENTIM", true),
                newImport("java.util.zip.ZipFile.CENTIM", true),
                newImport("java.util.zip.ZipInputStream.CENTIM", true),
                newImport("java.util.zip.ZipOutputStream.CENTIM", true),
              })
          .put(
              new Identifier("createLink"),
              new Import[] {
                newImport("java.nio.file.Files.createLink", true),
              })
          .put(
              new Identifier("DynArrayOperations"),
              new Import[] {
                newImport("org.omg.DynamicAny.DynArrayOperations", false),
              })
          .put(
              new Identifier("Native"),
              new Import[] {
                newImport("java.lang.annotation.Native", false),
              })
          .put(
              new Identifier("checkedSortedSet"),
              new Import[] {
                newImport("java.util.Collections.checkedSortedSet", true),
              })
          .put(
              new Identifier("printDouble"),
              new Import[] {
                newImport("javax.xml.bind.DatatypeConverter.printDouble", true),
              })
          .put(
              new Identifier("Executable"),
              new Import[] {
                newImport("java.lang.reflect.Executable", false),
              })
          .put(
              new Identifier("NonWritableChannelException"),
              new Import[] {
                newImport("java.nio.channels.NonWritableChannelException", false),
              })
          .put(
              new Identifier("TUNE_REQUEST"),
              new Import[] {
                newImport("javax.sound.midi.ShortMessage.TUNE_REQUEST", true),
              })
          .put(
              new Identifier("ACCESSIBLE_TABLE_CAPTION_CHANGED"),
              new Import[] {
                newImport(
                    "javax.accessibility.AccessibleContext.ACCESSIBLE_TABLE_CAPTION_CHANGED", true),
              })
          .put(
              new Identifier("AuthenticationType"),
              new Import[] {
                newImport("javax.annotation.Resource.AuthenticationType", false),
              })
          .put(
              new Identifier("CARET_POSITION_CHANGED"),
              new Import[] {
                newImport("java.awt.event.InputMethodEvent.CARET_POSITION_CHANGED", true),
              })
          .put(
              new Identifier("INCLUSIVE_WITH_COMMENTS"),
              new Import[] {
                newImport(
                    "javax.xml.crypto.dsig.CanonicalizationMethod.INCLUSIVE_WITH_COMMENTS", true),
              })
          .put(
              new Identifier("MENU_ITEM_ACCELERATOR"),
              new Import[] {
                newImport("javax.swing.plaf.synth.Region.MENU_ITEM_ACCELERATOR", true),
              })
          .put(
              new Identifier("Packer"),
              new Import[] {
                newImport("java.util.jar.Pack200.Packer", false),
              })
          .put(
              new Identifier("OpenMBeanConstructorInfo"),
              new Import[] {
                newImport("javax.management.openmbean.OpenMBeanConstructorInfo", false),
              })
          .put(
              new Identifier("VALUE_ALPHA_INTERPOLATION_QUALITY"),
              new Import[] {
                newImport("java.awt.RenderingHints.VALUE_ALPHA_INTERPOLATION_QUALITY", true),
              })
          .put(
              new Identifier("AccessibleBundle"),
              new Import[] {
                newImport("javax.accessibility.AccessibleBundle", false),
              })
          .put(
              new Identifier("FEATURE"),
              new Import[] {
                newImport("javax.xml.transform.dom.DOMResult.FEATURE", true),
                newImport("javax.xml.transform.dom.DOMSource.FEATURE", true),
                newImport("javax.xml.transform.sax.SAXResult.FEATURE", true),
                newImport("javax.xml.transform.sax.SAXSource.FEATURE", true),
                newImport("javax.xml.transform.sax.SAXTransformerFactory.FEATURE", true),
                newImport("javax.xml.transform.stax.StAXResult.FEATURE", true),
                newImport("javax.xml.transform.stax.StAXSource.FEATURE", true),
                newImport("javax.xml.transform.stream.StreamResult.FEATURE", true),
                newImport("javax.xml.transform.stream.StreamSource.FEATURE", true),
              })
          .put(
              new Identifier("XPathFunctionResolver"),
              new Import[] {
                newImport("javax.xml.xpath.XPathFunctionResolver", false),
              })
          .put(
              new Identifier("RepositoryIdHelper"),
              new Import[] {
                newImport("org.omg.CORBA.RepositoryIdHelper", false),
              })
          .put(
              new Identifier("BigInteger"),
              new Import[] {
                newImport("java.math.BigInteger", false),
              })
          .put(
              new Identifier("makeKeyBindings"),
              new Import[] {
                newImport("javax.swing.LookAndFeel.makeKeyBindings", true),
              })
          .put(
              new Identifier("ISINDEX"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.ISINDEX", true),
              })
          .put(
              new Identifier("PopupMenu"),
              new Import[] {
                newImport("java.awt.PopupMenu", false),
              })
          .put(
              new Identifier("TAG_PCLT"),
              new Import[] {
                newImport("java.awt.font.OpenType.TAG_PCLT", true),
              })
          .put(
              new Identifier("AttributeChangeNotification"),
              new Import[] {
                newImport("javax.management.AttributeChangeNotification", false),
              })
          .put(
              new Identifier("Element"),
              new Import[] {
                newImport("javax.lang.model.element.Element", false),
                newImport("javax.swing.text.Element", false),
                newImport("javax.swing.text.html.parser.Element", false),
                newImport("javax.xml.bind.Element", false),
                newImport("org.w3c.dom.Element", false),
              })
          .put(
              new Identifier("TabularType"),
              new Import[] {
                newImport("javax.management.openmbean.TabularType", false),
              })
          .put(
              new Identifier("InternationalFormatter"),
              new Import[] {
                newImport("javax.swing.text.InternationalFormatter", false),
              })
          .put(
              new Identifier("PRINTER_STOPPED_PARTLY"),
              new Import[] {
                newImport(
                    "javax.print.attribute.standard.JobStateReason.PRINTER_STOPPED_PARTLY", true),
              })
          .put(
              new Identifier("getConnection"),
              new Import[] {
                newImport("java.sql.DriverManager.getConnection", true),
              })
          .put(
              new Identifier("SelectorProvider"),
              new Import[] {
                newImport("java.nio.channels.spi.SelectorProvider", false),
              })
          .put(
              new Identifier("getStyle"),
              new Import[] {
                newImport("javax.swing.plaf.nimbus.NimbusLookAndFeel.getStyle", true),
                newImport("javax.swing.plaf.synth.SynthLookAndFeel.getStyle", true),
              })
          .put(
              new Identifier("TYPE_IDENTITY"),
              new Import[] {
                newImport("java.awt.geom.AffineTransform.TYPE_IDENTITY", true),
              })
          .put(
              new Identifier("MIN_HIGH_SURROGATE"),
              new Import[] {
                newImport("java.lang.Character.MIN_HIGH_SURROGATE", true),
              })
          .put(
              new Identifier("PKIXCertPathChecker"),
              new Import[] {
                newImport("java.security.cert.PKIXCertPathChecker", false),
              })
          .put(
              new Identifier("MetalScrollButton"),
              new Import[] {
                newImport("javax.swing.plaf.metal.MetalScrollButton", false),
              })
          .put(
              new Identifier("IdAssignmentPolicyValue"),
              new Import[] {
                newImport("org.omg.PortableServer.IdAssignmentPolicyValue", false),
              })
          .put(
              new Identifier("UnrecoverableEntryException"),
              new Import[] {
                newImport("java.security.UnrecoverableEntryException", false),
              })
          .put(
              new Identifier("EventTarget"),
              new Import[] {
                newImport("org.w3c.dom.events.EventTarget", false),
              })
          .put(
              new Identifier("ClassDesc"),
              new Import[] {
                newImport("javax.rmi.CORBA.ClassDesc", false),
              })
          .put(
              new Identifier("Delayed"),
              new Import[] {
                newImport("java.util.concurrent.Delayed", false),
              })
          .put(
              new Identifier("JarInputStream"),
              new Import[] {
                newImport("java.util.jar.JarInputStream", false),
              })
          .put(
              new Identifier("KeyEventDispatcher"),
              new Import[] {
                newImport("java.awt.KeyEventDispatcher", false),
              })
          .put(
              new Identifier("BasicControl"),
              new Import[] {
                newImport("javax.naming.ldap.BasicControl", false),
              })
          .put(
              new Identifier("EXTLEN"),
              new Import[] {
                newImport("java.util.jar.JarEntry.EXTLEN", true),
                newImport("java.util.jar.JarFile.EXTLEN", true),
                newImport("java.util.jar.JarInputStream.EXTLEN", true),
                newImport("java.util.jar.JarOutputStream.EXTLEN", true),
                newImport("java.util.zip.ZipEntry.EXTLEN", true),
                newImport("java.util.zip.ZipFile.EXTLEN", true),
                newImport("java.util.zip.ZipInputStream.EXTLEN", true),
                newImport("java.util.zip.ZipOutputStream.EXTLEN", true),
              })
          .put(
              new Identifier("getDefaultCommandMap"),
              new Import[] {
                newImport("javax.activation.CommandMap.getDefaultCommandMap", true),
              })
          .put(
              new Identifier("PreparedStatement"),
              new Import[] {
                newImport("java.sql.PreparedStatement", false),
              })
          .put(
              new Identifier("HTTP_INTERNAL_ERROR"),
              new Import[] {
                newImport("java.net.HttpURLConnection.HTTP_INTERNAL_ERROR", true),
              })
          .put(
              new Identifier("NO_SUCH_PAGE"),
              new Import[] {
                newImport("java.awt.print.Printable.NO_SUCH_PAGE", true),
              })
          .put(
              new Identifier("RelationService"),
              new Import[] {
                newImport("javax.management.relation.RelationService", false),
              })
          .put(
              new Identifier("CYRILLIC_EXTENDED_A"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.CYRILLIC_EXTENDED_A", true),
              })
          .put(
              new Identifier("CYRILLIC_EXTENDED_B"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.CYRILLIC_EXTENDED_B", true),
              })
          .put(
              new Identifier("BasicMenuUI"),
              new Import[] {
                newImport("javax.swing.plaf.basic.BasicMenuUI", false),
              })
          .put(
              new Identifier("ForwardingJavaFileManager"),
              new Import[] {
                newImport("javax.tools.ForwardingJavaFileManager", false),
              })
          .put(
              new Identifier("getIndexOfSize"),
              new Import[] {
                newImport("javax.swing.text.html.StyleSheet.getIndexOfSize", true),
              })
          .put(
              new Identifier("getSystemCustomCursor"),
              new Import[] {
                newImport("java.awt.Cursor.getSystemCustomCursor", true),
              })
          .put(
              new Identifier("WALL_TIME"),
              new Import[] {
                newImport("java.util.SimpleTimeZone.WALL_TIME", true),
              })
          .put(
              new Identifier("ValueBaseHelper"),
              new Import[] {
                newImport("org.omg.CORBA.ValueBaseHelper", false),
              })
          .put(
              new Identifier("ZoneView"),
              new Import[] {
                newImport("javax.swing.text.ZoneView", false),
              })
          .put(
              new Identifier("Location"),
              new Import[] {
                newImport("javax.tools.DocumentationTool.Location", false),
                newImport("javax.tools.JavaFileManager.Location", false),
                newImport("javax.xml.stream.Location", false),
              })
          .put(
              new Identifier("ContentType"),
              new Import[] {
                newImport("javax.swing.text.DefaultStyledDocument.ElementSpec.ContentType", true),
              })
          .put(
              new Identifier("ClientRequestInfoOperations"),
              new Import[] {
                newImport("org.omg.PortableInterceptor.ClientRequestInfoOperations", false),
              })
          .put(
              new Identifier("TextAttribute"),
              new Import[] {
                newImport("java.awt.font.TextAttribute", false),
              })
          .put(
              new Identifier("Rectangle"),
              new Import[] {
                newImport("java.awt.Rectangle", false),
              })
          .put(
              new Identifier("MANAGES_DESCENDANTS"),
              new Import[] {
                newImport("javax.accessibility.AccessibleState.MANAGES_DESCENDANTS", true),
              })
          .put(
              new Identifier("INPUT_METHOD_TEXT_CHANGED"),
              new Import[] {
                newImport("java.awt.event.InputMethodEvent.INPUT_METHOD_TEXT_CHANGED", true),
              })
          .put(
              new Identifier("HREF"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Attribute.HREF", true),
              })
          .put(
              new Identifier("DIRECTIONALITY_RIGHT_TO_LEFT"),
              new Import[] {
                newImport("java.lang.Character.DIRECTIONALITY_RIGHT_TO_LEFT", true),
              })
          .put(
              new Identifier("ArithmeticException"),
              new Import[] {
                newImport("java.lang.ArithmeticException", false),
              })
          .put(
              new Identifier("Deflater"),
              new Import[] {
                newImport("java.util.zip.Deflater", false),
              })
          .put(
              new Identifier("KEY_RELEASE"),
              new Import[] {
                newImport("java.awt.Event.KEY_RELEASE", true),
              })
          .put(
              new Identifier("DIRECTION_DEFAULT_LEFT_TO_RIGHT"),
              new Import[] {
                newImport("java.text.Bidi.DIRECTION_DEFAULT_LEFT_TO_RIGHT", true),
              })
          .put(
              new Identifier("LexicalHandler"),
              new Import[] {
                newImport("org.xml.sax.ext.LexicalHandler", false),
              })
          .put(
              new Identifier("SATURDAY"),
              new Import[] {
                newImport("java.util.Calendar.SATURDAY", true),
              })
          .put(
              new Identifier("setDefaultSSLSocketFactory"),
              new Import[] {
                newImport("javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory", true),
              })
          .put(
              new Identifier("Buffer"),
              new Import[] {
                newImport("java.nio.Buffer", false),
              })
          .put(
              new Identifier("JMXServiceURL"),
              new Import[] {
                newImport("javax.management.remote.JMXServiceURL", false),
              })
          .put(
              new Identifier("KeyPair"),
              new Import[] {
                newImport("java.security.KeyPair", false),
              })
          .put(
              new Identifier("LocalTime"),
              new Import[] {
                newImport("java.time.LocalTime", false),
              })
          .put(
              new Identifier("getProviders"),
              new Import[] {
                newImport("java.security.Security.getProviders", true),
              })
          .put(
              new Identifier("AccessibleState"),
              new Import[] {
                newImport("javax.accessibility.AccessibleState", false),
              })
          .put(
              new Identifier("LinkLoopException"),
              new Import[] {
                newImport("javax.naming.LinkLoopException", false),
              })
          .put(
              new Identifier("OPTION"),
              new Import[] {
                newImport("javax.swing.text.html.HTML.Tag.OPTION", true),
              })
          .put(
              new Identifier("TOGGLE_EXPAND"),
              new Import[] {
                newImport("javax.accessibility.AccessibleAction.TOGGLE_EXPAND", true),
              })
          .put(
              new Identifier("Namespace"),
              new Import[] {
                newImport("javax.xml.stream.events.Namespace", false),
              })
          .put(
              new Identifier("AffineTransformOp"),
              new Import[] {
                newImport("java.awt.image.AffineTransformOp", false),
              })
          .put(
              new Identifier("getDefaultDragSource"),
              new Import[] {
                newImport("java.awt.dnd.DragSource.getDefaultDragSource", true),
              })
          .put(
              new Identifier("DESIGNATED_LONG"),
              new Import[] {
                newImport("javax.print.attribute.standard.MediaSize.ISO.DESIGNATED_LONG", true),
              })
          .put(
              new Identifier("JTree"),
              new Import[] {
                newImport("javax.swing.JTree", false),
              })
          .put(
              new Identifier("DynamicUtilTreeNode"),
              new Import[] {
                newImport("javax.swing.JTree.DynamicUtilTreeNode", false),
              })
          .put(
              new Identifier("SignatureMethod"),
              new Import[] {
                newImport("javax.xml.crypto.dsig.SignatureMethod", false),
              })
          .put(
              new Identifier("ProviderMismatchException"),
              new Import[] {
                newImport("java.nio.file.ProviderMismatchException", false),
              })
          .put(
              new Identifier("FULL_JOIN"),
              new Import[] {
                newImport("javax.sql.rowset.JoinRowSet.FULL_JOIN", true),
              })
          .put(
              new Identifier("SECOND_FIELD"),
              new Import[] {
                newImport("java.text.DateFormat.SECOND_FIELD", true),
              })
          .put(
              new Identifier("OPENED"),
              new Import[] {
                newImport("javax.management.remote.JMXConnectionNotification.OPENED", true),
              })
          .put(
              new Identifier("SynthViewportUI"),
              new Import[] {
                newImport("javax.swing.plaf.synth.SynthViewportUI", false),
              })
          .put(
              new Identifier("parseDateTime"),
              new Import[] {
                newImport("javax.xml.bind.DatatypeConverter.parseDateTime", true),
              })
          .put(
              new Identifier("_tk_Principal"),
              new Import[] {
                newImport("org.omg.CORBA.TCKind._tk_Principal", true),
              })
          .put(
              new Identifier("rotateLeft"),
              new Import[] {
                newImport("java.lang.Integer.rotateLeft", true),
                newImport("java.lang.Long.rotateLeft", true),
              })
          .put(
              new Identifier("createSymbolicLink"),
              new Import[] {
                newImport("java.nio.file.Files.createSymbolicLink", true),
              })
          .put(
              new Identifier("ECGenParameterSpec"),
              new Import[] {
                newImport("java.security.spec.ECGenParameterSpec", false),
              })
          .put(
              new Identifier("FLAG_RUN_RTL"),
              new Import[] {
                newImport("java.awt.font.GlyphVector.FLAG_RUN_RTL", true),
              })
          .put(
              new Identifier("VK_JAPANESE_ROMAN"),
              new Import[] {
                newImport("java.awt.event.KeyEvent.VK_JAPANESE_ROMAN", true),
              })
          .put(
              new Identifier("lookupTag"),
              new Import[] {
                newImport("java.util.Locale.lookupTag", true),
              })
          .put(
              new Identifier("Binder"),
              new Import[] {
                newImport("javax.xml.bind.Binder", false),
              })
          .put(
              new Identifier("MemoryMXBean"),
              new Import[] {
                newImport("java.lang.management.MemoryMXBean", false),
              })
          .put(
              new Identifier("OSMANYA"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.OSMANYA", true),
              })
          .put(
              new Identifier("GLOBAL_SCOPE"),
              new Import[] {
                newImport("javax.script.ScriptContext.GLOBAL_SCOPE", true),
              })
          .put(
              new Identifier("AbstractSelectionKey"),
              new Import[] {
                newImport("java.nio.channels.spi.AbstractSelectionKey", false),
              })
          .put(
              new Identifier("CONTROLLED_BY_PROPERTY"),
              new Import[] {
                newImport("javax.accessibility.AccessibleRelation.CONTROLLED_BY_PROPERTY", true),
              })
          .put(
              new Identifier("icHdrMagic"),
              new Import[] {
                newImport("java.awt.color.ICC_Profile.icHdrMagic", true),
              })
          .put(
              new Identifier("FileFilter"),
              new Import[] {
                newImport("java.io.FileFilter", false),
                newImport("javax.swing.filechooser.FileFilter", false),
              })
          .put(
              new Identifier("doPrivilegedWithCombiner"),
              new Import[] {
                newImport("java.security.AccessController.doPrivilegedWithCombiner", true),
              })
          .put(
              new Identifier("Spliterator"),
              new Import[] {
                newImport("java.util.Spliterator", false),
              })
          .put(
              new Identifier("Pattern"),
              new Import[] {
                newImport("java.util.regex.Pattern", false),
              })
          .put(
              new Identifier("MetaEventListener"),
              new Import[] {
                newImport("javax.sound.midi.MetaEventListener", false),
              })
          .put(
              new Identifier("IsoChronology"),
              new Import[] {
                newImport("java.time.chrono.IsoChronology", false),
              })
          .put(
              new Identifier("getSystemResource"),
              new Import[] {
                newImport("java.lang.ClassLoader.getSystemResource", true),
              })
          .put(
              new Identifier("ECPoint"),
              new Import[] {
                newImport("java.security.spec.ECPoint", false),
              })
          .put(
              new Identifier("OBSERVED_OBJECT_ERROR"),
              new Import[] {
                newImport(
                    "javax.management.monitor.MonitorNotification.OBSERVED_OBJECT_ERROR", true),
              })
          .put(
              new Identifier("isLocal"),
              new Import[] {
                newImport("javax.rmi.CORBA.Util.isLocal", true),
              })
          .put(
              new Identifier("AbstractAnnotationValueVisitor7"),
              new Import[] {
                newImport("javax.lang.model.util.AbstractAnnotationValueVisitor7", false),
              })
          .put(
              new Identifier("AbstractAnnotationValueVisitor6"),
              new Import[] {
                newImport("javax.lang.model.util.AbstractAnnotationValueVisitor6", false),
              })
          .put(
              new Identifier("AbstractAnnotationValueVisitor8"),
              new Import[] {
                newImport("javax.lang.model.util.AbstractAnnotationValueVisitor8", false),
              })
          .put(
              new Identifier("Finishings"),
              new Import[] {
                newImport("javax.print.attribute.standard.Finishings", false),
              })
          .put(
              new Identifier("setCurrentTheme"),
              new Import[] {
                newImport("javax.swing.plaf.metal.MetalLookAndFeel.setCurrentTheme", true),
              })
          .put(
              new Identifier("HTTP_GONE"),
              new Import[] {
                newImport("java.net.HttpURLConnection.HTTP_GONE", true),
              })
          .put(
              new Identifier("KEEP_FILE_ORDER"),
              new Import[] {
                newImport("java.util.jar.Pack200.Packer.KEEP_FILE_ORDER", true),
              })
          .put(
              new Identifier("DynamicMBean"),
              new Import[] {
                newImport("javax.management.DynamicMBean", false),
              })
          .put(
              new Identifier("AccessDeniedException"),
              new Import[] {
                newImport("java.nio.file.AccessDeniedException", false),
              })
          .put(
              new Identifier("getDefaultLightWeightPopupEnabled"),
              new Import[] {
                newImport("javax.swing.JPopupMenu.getDefaultLightWeightPopupEnabled", true),
              })
          .put(
              new Identifier("SO_SNDBUF"),
              new Import[] {
                newImport("java.net.SocketOptions.SO_SNDBUF", true),
                newImport("java.net.StandardSocketOptions.SO_SNDBUF", true),
              })
          .put(
              new Identifier("Builder"),
              new Import[] {
                newImport("java.nio.file.attribute.AclEntry.Builder", false),
                newImport("java.security.KeyStore.Builder", false),
                newImport("java.util.Calendar.Builder", false),
                newImport("java.util.Locale.Builder", false),
                newImport("java.util.stream.DoubleStream.Builder", false),
                newImport("java.util.stream.IntStream.Builder", false),
                newImport("java.util.stream.LongStream.Builder", false),
                newImport("java.util.stream.Stream.Builder", false),
              })
          .put(
              new Identifier("NT_EXPORT_NAME"),
              new Import[] {
                newImport("org.ietf.jgss.GSSName.NT_EXPORT_NAME", true),
              })
          .put(
              new Identifier("Executors"),
              new Import[] {
                newImport("java.util.concurrent.Executors", false),
              })
          .put(
              new Identifier("CHOU_1"),
              new Import[] {
                newImport("javax.print.attribute.standard.MediaSize.JIS.CHOU_1", true),
              })
          .put(
              new Identifier("ECPublicKeySpec"),
              new Import[] {
                newImport("java.security.spec.ECPublicKeySpec", false),
              })
          .put(
              new Identifier("CHOU_2"),
              new Import[] {
                newImport("javax.print.attribute.standard.MediaSize.JIS.CHOU_2", true),
              })
          .put(
              new Identifier("CHOU_3"),
              new Import[] {
                newImport("javax.print.attribute.standard.MediaSize.JIS.CHOU_3", true),
              })
          .put(
              new Identifier("NoInitialContextException"),
              new Import[] {
                newImport("javax.naming.NoInitialContextException", false),
              })
          .put(
              new Identifier("PAINT_LAST"),
              new Import[] {
                newImport("java.awt.event.PaintEvent.PAINT_LAST", true),
              })
          .put(
              new Identifier("getMenuArrowIcon"),
              new Import[] {
                newImport("javax.swing.plaf.basic.BasicIconFactory.getMenuArrowIcon", true),
                newImport("javax.swing.plaf.metal.MetalIconFactory.getMenuArrowIcon", true),
              })
          .put(
              new Identifier("MOUSE_WHEEL_EVENT_MASK"),
              new Import[] {
                newImport("java.awt.AWTEvent.MOUSE_WHEEL_EVENT_MASK", true),
              })
          .put(
              new Identifier("BadKind"),
              new Import[] {
                newImport("org.omg.CORBA.TypeCodePackage.BadKind", false),
              })
          .put(
              new Identifier("JOIN_MITER"),
              new Import[] {
                newImport("java.awt.BasicStroke.JOIN_MITER", true),
              })
          .put(
              new Identifier("icSigOutputClass"),
              new Import[] {
                newImport("java.awt.color.ICC_Profile.icSigOutputClass", true),
              })
          .put(
              new Identifier("GEORGIAN"),
              new Import[] {
                newImport("java.lang.Character.UnicodeBlock.GEORGIAN", true),
              })
          .put(
              new Identifier("MARSHAL"),
              new Import[] {
                newImport("org.omg.CORBA.MARSHAL", false),
              })
          .put(
              new Identifier("TITLECASE_LETTER"),
              new Import[] {
                newImport("java.lang.Character.TITLECASE_LETTER", true),
              })
          .put(
              new Identifier("ADMIN_UIROLE"),
              new Import[] {
                newImport("javax.print.ServiceUIFactory.ADMIN_UIROLE", true),
              })
          .put(
              new Identifier("JOptionPane"),
              new Import[] {
                newImport("javax.swing.JOptionPane", false),
              })
          .put(
              new Identifier("CommonDataSource"),
              new Import[] {
                newImport("javax.sql.CommonDataSource", false),
              })
          .put(
              new Identifier("PushbackReader"),
              new Import[] {
                newImport("java.io.PushbackReader", false),
              })
          .put(
              new Identifier("IS_SUPPORTING_EXTERNAL_ENTITIES"),
              new Import[] {
                newImport("javax.xml.stream.XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES", true),
              })
          .put(
              new Identifier("printDialog"),
              new Import[] {
                newImport("javax.print.ServiceUI.printDialog", true),
              })
          .put(
              new Identifier("createBevelBorder"),
              new Import[] {
                newImport("javax.swing.BorderFactory.createBevelBorder", true),
              })
          .put(
              new Identifier("getVerticalSliderThumbIcon"),
              new Import[] {
                newImport(
                    "javax.swing.plaf.metal.MetalIconFactory.getVerticalSliderThumbIcon", true),
              })
          .put(
              new Identifier("systemUTC"),
              new Import[] {
                newImport("java.time.Clock.systemUTC", true),
              })
          .put(
              new Identifier("INSERT"),
              new Import[] {
                newImport("java.awt.Event.INSERT", true),
                newImport("javax.accessibility.AccessibleTableModelChange.INSERT", true),
                newImport("javax.swing.event.TableModelEvent.INSERT", true),
                newImport("javax.swing.event.DocumentEvent.EventType.INSERT", true),
              })
          .put(
              new Identifier("AccountNotFoundException"),
              new Import[] {
                newImport("javax.security.auth.login.AccountNotFoundException", false),
              })
          .put(
              new Identifier("SRC_IN"),
              new Import[] {
                newImport("java.awt.AlphaComposite.SRC_IN", true),
              })
          .put(
              new Identifier("WindowTranslucency"),
              new Import[] {
                newImport("java.awt.GraphicsDevice.WindowTranslucency", false),
              })
          .put(
              new Identifier("InsufficientResourcesException"),
              new Import[] {
                newImport("javax.naming.InsufficientResourcesException", false),
              })
          .put(
              new Identifier("SSLEngine"),
              new Import[] {
                newImport("javax.net.ssl.SSLEngine", false),
              })
          .put(
              new Identifier("ENDPOINT_ADDRESS_PROPERTY"),
              new Import[] {
                newImport("javax.xml.ws.BindingProvider.ENDPOINT_ADDRESS_PROPERTY", true),
              })
          .put(
              new Identifier("END_PUNCTUATION"),
              new Import[] {
                newImport("java.lang.Character.END_PUNCTUATION", true),
              })
          .put(
              new Identifier("ABOVE_BOTTOM"),
              new Import[] {
                newImport("javax.swing.border.TitledBorder.ABOVE_BOTTOM", true),
              })
          .put(
              new Identifier("tickSeconds"),
              new Import[] {
                newImport("java.time.Clock.tickSeconds", true),
              })
          .put(
              new Identifier("icSigCrdInfoTag"),
              new Import[] {
                newImport("java.awt.color.ICC_Profile.icSigCrdInfoTag", true),
              })
          .put(
              new Identifier("reflectAs"),
              new Import[] {
                newImport("java.lang.invoke.MethodHandles.reflectAs", true),
              })
          .put(
              new Identifier("Chronology"),
              new Import[] {
                newImport("java.time.chrono.Chronology", false),
              })
          .put(
              new Identifier("UnsupportedTemporalTypeException"),
              new Import[] {
                newImport("java.time.temporal.UnsupportedTemporalTypeException", false),
              })
          .put(
              new Identifier("HTTP_RESPONSE_HEADERS"),
              new Import[] {
                newImport("javax.xml.ws.handler.MessageContext.HTTP_RESPONSE_HEADERS", true),
              })
          .put(
              new Identifier("MetalScrollBarUI"),
              new Import[] {
                newImport("javax.swing.plaf.metal.MetalScrollBarUI", false),
              })
          .put(
              new Identifier("subtractExact"),
              new Import[] {
                newImport("java.lang.Math.subtractExact", true),
                newImport("java.lang.StrictMath.subtractExact", true),
              })
          .put(
              new Identifier("AdapterAlreadyExistsHelper"),
              new Import[] {
                newImport("org.omg.PortableServer.POAPackage.AdapterAlreadyExistsHelper", false),
              })
          .put(
              new Identifier("DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR"),
              new Import[] {
                newImport("java.lang.Character.DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR", true),
              })
          .put(
              new Identifier("URLDataSource"),
              new Import[] {
                newImport("javax.activation.URLDataSource", false),
              })
          .put(
              new Identifier("AclFileAttributeView"),
              new Import[] {
                newImport("java.nio.file.attribute.AclFileAttributeView", false),
              })
          .put(
              new Identifier("SPLIT_PANE"),
              new Import[] {
                newImport("javax.accessibility.AccessibleRole.SPLIT_PANE", true),
                newImport("javax.swing.plaf.synth.Region.SPLIT_PANE", true),
              })
          .put(
              new Identifier("UNINITIALIZED_VALUE"),
              new Import[] {
                newImport("javax.swing.JOptionPane.UNINITIALIZED_VALUE", true),
              })
          .put(
              new Identifier("BIT_DEPTH_MULTI"),
              new Import[] {
                newImport("java.awt.DisplayMode.BIT_DEPTH_MULTI", true),
              })
          .put(
              new Identifier("TUMBLE"),
              new Import[] {
                newImport("javax.print.attribute.standard.Sides.TUMBLE", true),
              })
          .put(
              new Identifier("BORDER_STYLE"),
              new Import[] {
                newImport("javax.swing.text.html.CSS.Attribute.BORDER_STYLE", true),
              })
          .put(
              new Identifier("TEXT_PLAIN_HOST"),
              new Import[] {
                newImport("javax.print.DocFlavor.BYTE_ARRAY.TEXT_PLAIN_HOST", true),
                newImport("javax.print.DocFlavor.INPUT_STREAM.TEXT_PLAIN_HOST", true),
                newImport("javax.print.DocFlavor.URL.TEXT_PLAIN_HOST", true),
              })
          .put(
              new Identifier("SWING_COMPONENT"),
              new Import[] {
                newImport("javax.accessibility.AccessibleRole.SWING_COMPONENT", true),
              })
          .put(
              new Identifier("NOT_ACCEPTING_JOBS"),
              new Import[] {
                newImport(
                    "javax.print.attribute.standard.PrinterIsAcceptingJobs.NOT_ACCEPTING_JOBS",
                    true),
              })
          .put(
              new Identifier("Pipe"),
              new Import[] {
                newImport("java.nio.channels.Pipe", false),
              })
          .put(
              new Identifier("DataInputStream"),
              new Import[] {
                newImport("java.io.DataInputStream", false),
                newImport("org.omg.CORBA.DataInputStream", false),
              })
          .put(
              new Identifier("SSLServerSocket"),
              new Import[] {
                newImport("javax.net.ssl.SSLServerSocket", false),
              })
          .put(
              new Identifier("DIRECTION_LEFT_TO_RIGHT"),
              new Import[] {
                newImport("java.text.Bidi.DIRECTION_LEFT_TO_RIGHT", true),
              })
          .put(
              new Identifier("InputVerifier"),
              new Import[] {
                newImport("javax.swing.InputVerifier", false),
              })
          .put(
              new Identifier("JOB_COMPLETED_SUCCESSFULLY"),
              new Import[] {
                newImport(
                    "javax.print.attribute.standard.JobStateReason.JOB_COMPLETED_SUCCESSFULLY",
                    true),
              })
          .put(
              new Identifier("SHA256"),
              new Import[] {
                newImport("java.security.spec.MGF1ParameterSpec.SHA256", true),
                newImport("javax.xml.crypto.dsig.DigestMethod.SHA256", true),
              })
          .put(
              new Identifier("CENCOM"),
              new Import[] {
                newImport("java.util.jar.JarEntry.CENCOM", true),
                newImport("java.util.jar.JarFile.CENCOM", true),
                newImport("java.util.jar.JarInputStream.CENCOM", true),
                newImport("java.util.jar.JarOutputStream.CENCOM", true),
                newImport("java.util.zip.ZipEntry.CENCOM", true),
                newImport("java.util.zip.ZipFile.CENCOM", true),
                newImport("java.util.zip.ZipInputStream.CENCOM", true),
                newImport("java.util.zip.ZipOutputStream.CENCOM", true),
              })
          .put(
              new Identifier("CLASS_PATH"),
              new Import[] {
                newImport("java.util.jar.Attributes.Name.CLASS_PATH", true),
              })
          .put(
              new Identifier("CertPathValidator"),
              new Import[] {
                newImport("java.security.cert.CertPathValidator", false),
              })
          .put(
              new Identifier("JMXConnectorServerProvider"),
              new Import[] {
                newImport("javax.management.remote.JMXConnectorServerProvider", false),
              })
          .put(
              new Identifier("IntersectionType"),
              new Import[] {
                newImport("javax.lang.model.type.IntersectionType", false),
              })
          .put(
              new Identifier("getNoFallbackControl"),
              new Import[] {
                newImport("java.util.ResourceBundle.Control.getNoFallbackControl", true),
              })
          .put(
              new Identifier("LOCNAM"),
              new Import[] {
                newImport("java.util.jar.JarEntry.LOCNAM", true),
                newImport("java.util.jar.JarFile.LOCNAM", true),
                newImport("java.util.jar.JarInputStream.LOCNAM", true),
                newImport("java.util.jar.JarOutputStream.LOCNAM", true),
                newImport("java.util.zip.ZipEntry.LOCNAM", true),
                newImport("java.util.zip.ZipFile.LOCNAM", true),
                newImport("java.util.zip.ZipInputStream.LOCNAM", true),
                newImport("java.util.zip.ZipOutputStream.LOCNAM", true),
              })
          .put(
              new Identifier("setCurrentKeyboardFocusManager"),
              new Import[] {
                newImport("java.awt.KeyboardFocusManager.setCurrentKeyboardFocusManager", true),
              })
          .put(
              new Identifier("round"),
              new Import[] {
                newImport("java.lang.Math.round", true),
                newImport("java.lang.StrictMath.round", true),
              })
          .put(
              new Identifier("LEFT_JUSTIFY"),
              new Import[] {
                newImport("java.util.FormattableFlags.LEFT_JUSTIFY", true),
              })
          .put(
              new Identifier("ACTION_REPLACE_CHILDREN"),
              new Import[] {
                newImport("org.w3c.dom.ls.LSParser.ACTION_REPLACE_CHILDREN", true),
              })
          .put(
              new Identifier("IDLE"),
              new Import[] {
                newImport("javax.print.attribute.standard.PrinterState.IDLE", true),
              })
          .put(
              new Identifier("MINI_KEY"),
              new Import[] {
                newImport("javax.swing.plaf.nimbus.NimbusStyle.MINI_KEY", true),
              })
          .put(
              new Identifier("TAG_JSTF"),
              new Import[] {
                newImport("java.awt.font.OpenType.TAG_JSTF", true),
              })
          .put(
              new Identifier("CredentialExpiredException"),
              new Import[] {
                newImport("javax.security.auth.login.CredentialExpiredException", false),
              })
          .put(
              new Identifier("DISPLAYABILITY_CHANGED"),
              new Import[] {
                newImport("java.awt.event.HierarchyEvent.DISPLAYABILITY_CHANGED", true),
              })
          .put(
              new Identifier("IP_MULTICAST_TTL"),
              new Import[] {
                newImport("java.net.StandardSocketOptions.IP_MULTICAST_TTL", true),
              })
          .put(
              new Identifier("CertStore"),
              new Import[] {
                newImport("java.security.cert.CertStore", false),
              })
          .put(
              new Identifier("WANTS_INPUT_PROPERTY"),
              new Import[] {
                newImport("javax.swing.JOptionPane.WANTS_INPUT_PROPERTY", true),
              })
          .put(
              new Identifier("summingLong"),
              new Import[] {
                newImport("java.util.stream.Collectors.summingLong", true),
              })
          .build();
}
